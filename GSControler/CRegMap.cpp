/***********************

说明：主要实现寄存器读写实现。


***********************/
#include "CRegMap.h"
#include "GSDefine.h"
#include <stdio.h>
#include <string.h>
#include "server.h"
#include "CanDateAnalysis.h"
#include "FileToPc.h"
#include "FIleToArm.h"
#include "LDKeeper.h"
#include "RegTable.h"
#include "GsApi.h"
#include "UpdateProgram.h"
#include "Module.h"
#include "scanner.h"
#include "Scanning.h"
#include "OpticalPower.h"
#include "board.h"

extern int LockNumber;
extern  Board * boards;
extern Module module;
extern SCANNING * scantemp ;

extern LDKeeper * lpLD_temp;
extern bool IsSanHeYi;

LDKeeper SecondSeedBos(0x04);

CRegMap::CRegMap()
{
	InitInstance();  
}

CRegMap::~CRegMap(void)
{

}

bool CRegMap::InitInstance()
{

}

void CRegMap::WriteSingleByte(unsigned char addr1, unsigned char value)
{
  //  printf("%d %d\n",addr1,value);
    if(value != 255)
        fileTopc = new FileToPc(value);

}


short CRegMap::ReadDoubleByte(unsigned char addr1, unsigned char addr2, unsigned char addr3)
{
        CanDataStruct data;
        int Ld;
        int i = 0;
        int DisableLD;
        switch(addr1)
        {
        case 0x81:  boards[0].LD[0].Read_Set_Reg(addr2,addr3,BlockingRead,0,0,0,0,&data);break;
        case 0x82:  boards[0].LD[0].Read_Set_Reg(addr2,addr3,BlockingRead,0,0,0,0,&data);break;
        case 0x0 :  if(addr3 == 0){
                boards[addr2-1].LD[0].Read_Set_Reg(0,129,BlockingRead,0,0,0,0,&data);
                    }
                    else{
                        switch((addr2<<8)+addr3)
                        {
                        case NodeCnt   :    Ld = GetPrivateProfileInt(GS_INI_SECTION_MODULE,GS_INI_KEY_LD,-1,GS_INI_HARD_FILE);
                                            DisableLD  = GetPrivateProfileInt(GS_INI_SECTION_MODULE,GS_INI_KEY_DISABLELD,0,GS_INI_HARD_FILE);
                                            return (Ld-DisableLD -1  );
                                            break;
                        case Motor_savepos : return 0;
                        case 0x0008:        return LockNumber;
                        case 0x0009:        return 1;
                        default:            return 0x8f;
                        }
                    }
                    break;
        case 0xff:  if(addr2 == 1){
                        short freq = OpticalPower::getInstance()->GetCurrentFreq();return freq;
                    }
                    else if(addr2 == 2){
                        short s = OpticalPower::getInstance()->GetChannelSwitchStatus(addr3);return s;
                    }
                    else if(addr2 == 3){
                         return  OpticalPower::getInstance()->IsStartSaveFIle();
                    }
                    break;
        default:    boards[addr1-1].LD[0].Read_Set_Reg(addr2,addr3,BlockingRead,0,0,0,0,&data);break;
        }
        return data.s_data;
}


void CRegMap::WriteDoubleByte(unsigned char addr1,unsigned char addr2,unsigned char addr3, unsigned char data1, unsigned char data2)
{
    switch(addr1)
    {
    case 0x81:  boards[0].LD[0].Read_Set_Reg(addr2,addr3,WriteReg,data1,data2,0,0,NULL);break;
    case 0x82:  boards[0].LD[0].Read_Set_Reg(addr2,addr3,WriteReg,data1,data2,0,0,NULL);break;
    case 0x0 :  switch((addr2<<8)+addr3)
                {
            //  case VER0      : break;
                case VER1      : break;
           //   case NodeCnt   : break;
                case Motor_savepos :
                                //Get motor point and Update INIFIle motor location
                                CanDataStruct data;
                                unsigned short curr_x;
                                unsigned short curr_y;
                                unsigned short curr_u;
                                unsigned short curr_v;

                               boards[0].LD[0].Read_Set_Reg(0,Motor1X_Pos,BlockingRead,0,0,0,0,&data);
                                curr_x = data.s_data;
                               usleep(10000);
                                boards[0].LD[0].Read_Set_Reg(0,R_defaultX,WriteReg,curr_x&0xff,(curr_x>>8)&0xff,0,0,NULL);
                               WritePrivateProfileInt(GS_INI_SECTION_MOT ,GS_INI_KEY_X,curr_x,GS_INI_FILE);
                               usleep(10000);
                                boards[0].LD[0].Read_Set_Reg(0,Motor1Y_Pos,BlockingRead,0,0,0,0,&data);
                                curr_y = data.s_data;
                              usleep(10000);
                               boards[0].LD[0].Read_Set_Reg(0,R_defaultY,WriteReg,curr_y&0xff,(curr_y>>8)&0xff,0,0,NULL);
                                WritePrivateProfileInt(GS_INI_SECTION_MOT ,GS_INI_KEY_Y,curr_y,GS_INI_FILE);
                              usleep(10000);
                                boards[0].LD[0].Read_Set_Reg(0,Motor2X_Pos,BlockingRead,0,0,0,0,&data);
                                curr_u = data.s_data;

                             usleep(10000);
                               boards[0].LD[0].Read_Set_Reg(0,R_defaultU,WriteReg,curr_u&0xff,(curr_u>>8)&0xff,0,0,NULL);
                                usleep(10000);
                               boards[0].LD[0].Read_Set_Reg(0,Motor2Y_Pos,BlockingRead,0,0,0,0,&data);
                                curr_v = data.s_data;
                              usleep(10000);
                                boards[0].LD[0].Read_Set_Reg(0,R_defaultV,WriteReg,curr_v&0xff,(curr_v>>8)&0xff,0,0,NULL);
                                break;
                }break;
                case WebScan: scantemp->StartWebScan();
                            break;
    case 0xff:  if(addr2 == 1){
                    OpticalPower::getInstance()->SetFrequency(data1);
                }
                else if(addr2 == 2){
                    OpticalPower::getInstance()->SetAdcChannel(addr3,data1);
                }
                else if(addr2 == 3){
                    if(data1 == 1){
                        OpticalPower::getInstance()->StartSaveFile();
                    }
                    else{
                        OpticalPower::getInstance()->StopSaveFile();
                    }
                }
                break;
    default:
            boards[addr1-1].LD[0].Read_Set_Reg(addr2,addr3,WriteReg,data1,data2,0,0,NULL);break;
    }
}

float CRegMap::ReadFourByte(unsigned char addr1,unsigned char addr2,unsigned char addr3)
{
    if(addr1 == 0xff){
        if(addr2 == 0){
           return    OpticalPower::getInstance()->GetChannelPower(addr3/2);
        }
    }
    CanDataStruct data;
    float f_temp;
    int Ld;
    int DisableLD;
    switch(addr1)
    {
    case 0x0:    switch((addr2<<8)+addr3){
                 case VER0      : break;
                 case VER1      : break;
                 case NodeCnt   :
                                 Ld = GetPrivateProfileInt(GS_INI_SECTION_MODULE,GS_INI_KEY_LD,-1,GS_INI_HARD_FILE);
                                 DisableLD  = GetPrivateProfileInt(GS_INI_SECTION_MODULE,GS_INI_KEY_DISABLELD,-1,GS_INI_HARD_FILE);
                                 return (Ld-DisableLD + 1 );
                 break;
                 case Motor_savepos :break;
                 }break;

   case 0x81:  boards[0].LD[0].Read_Set_Reg(addr2,addr3,BlockingRead,0,0,0,0,&data);break;
   case 0x01:
                switch((addr2<<8)+addr3)
                {
                case RealCurrent    : f_temp = boards[0].LD[0].GetRealCurr();return f_temp;
                case RealTemperature: f_temp = boards[0].LD[0].GetRealTemp();return f_temp;
                case MAIRTEMP       : f_temp = boards[0].GetAirTemp(); return f_temp;
                case MPADTEMP       : f_temp =  boards[0].GetPadTemp();return f_temp;
                case RealLD1Temp    :  f_temp =boards[0].LD[1].GetRealTemp();return f_temp;
                case RealLD1Curr    :  f_temp = boards[0].LD[1].GetRealCurr();return f_temp;
                default:            boards[0].LD[0].Read_Set_Reg(addr2,addr3,BlockingRead,0,0,0,0,&data);
                }break;
    default:
                    switch((addr2<<8)+addr3)
                    {
                    case RealCurrent    : f_temp = boards[addr1-1].LD[0].GetRealCurr();return f_temp;
                    case RealTemperature: f_temp = boards[addr1-1].LD[0].GetRealTemp();return f_temp;
                    default:            boards[addr1-1].LD[0].Read_Set_Reg(addr2,addr3,BlockingRead,0,0,0,0,&data);break;
                    }break;
    }
     return data.f_data;
}

void  CRegMap::WriteFourByte(char addr1,char addr2,char addr3,char data1,char data2,char data3,char data4)
{
    switch(addr1)
    {
    case 0x0:   switch((addr2<<8)+addr3){
                case VER0      : break;
                case VER1      : break;
                case NodeCnt   : break;
                case Motor_savepos :break;
                }break;
    case 0x81:  boards[0].LD[0].Read_Set_Reg(addr2,addr3,WriteReg,data1,data2,data3,data4,NULL);break;
    default:    switch((addr2<<8)+addr3)
                {
                case CurTag1:if(boards[0].LD[0].GetRealCurr()>0.01)
                                boards[0].LD[1].SetCurrByReg(data1,data2,data3,data4);
                             break;
                case CurTag:
                    if(addr1 > 1){
                        if(boards[addr1-2].LD[boards[addr1-2].GetLDNumber()-1].GetRealCurr()>=0.01){
                            boards[addr1-1].LD[boards[addr1-1].GetLDNumber()-1].SetCurrByReg(data1,data2,data3,data4);
                        }
                    }
                    else
                        boards[addr1-1].LD[0/*boards[addr1-1].GetLDNumber()-1*/].SetCurrByReg(data1,data2,data3,data4);
                    break;
                case TempTag1:boards[addr1-1].LD[1].SetTempByReg(data1,data2,data3,data4);break;
                case TempTag:boards[addr1-1].LD[0].SetTempByReg(data1,data2,data3,data4);break;
                default:boards[addr1-1].LD[0].Read_Set_Reg(addr2,addr3,WriteReg,data1,data2,data3,data4,NULL);break;
                }break;
    }
}

string BuffChar;
int    BUffInt;
float  BuffFloat;

void CRegMap::ReadWriteIniFile(unsigned char addr1, unsigned char addr2, unsigned char addr3, unsigned char data1, unsigned char data2)
{

    switch((addr1<<8)+addr2)
    {
    case ProductModel_0	:   BuffChar += data1;BuffChar += data2;break;
    case ProductModel_1	:   BuffChar += data1;BuffChar += data2;break;
    case ProductModel_2	:   BuffChar += data1;BuffChar += data2;break;
    case ProductModel_3	:   BuffChar += data1;BuffChar += data2;break;
    case ProductModel_4	:   BuffChar += data1;BuffChar += data2;break;
    case ProductModel_5	:   BuffChar += data1;BuffChar += data2;break;
    case ProductModel_6 :   BuffChar += data1;BuffChar += data2;break;
    case ProductModel_7	:   BuffChar += data1;BuffChar += data2;break;
    case ProductModel_8	:   BuffChar += data1;BuffChar += data2;break;
    case ProductModel_9	:   BuffChar += data1;BuffChar += data2;break;
    case ProductModel_a	:   BuffChar += data1;BuffChar += data2;break;
    case ProductModel_b	:   BuffChar += data1;BuffChar += data2;break;
    case ProductModel_c :   BuffChar += data1;BuffChar += data2;break;
    case ProductModel_d	:   BuffChar += data1;BuffChar += data2;break;
    case ProductModel_e	:   BuffChar += data1;BuffChar += data2;break;
    case ProductModel_f :   BuffChar += data1; BuffChar += data2;
                            WritePrivateProfileString(GS_INI_SECTION_PRO,GS_INI_KEY_MODEL,BuffChar.c_str(),GS_INI_FILE);
                            BuffChar.clear();
                            break;

    case ProductID_0    :   BuffChar += data1;BuffChar += data2;break;
    case ProductID_1    :   BuffChar += data1;BuffChar += data2;break;
    case ProductID_2    :   BuffChar += data1;BuffChar += data2;break;
    case ProductID_3    :   BuffChar += data1;BuffChar += data2;break;
    case ProductID_4    :   BuffChar += data1;BuffChar += data2;break;
    case ProductID_5    :   BuffChar += data1;BuffChar += data2;break;
    case ProductID_6    :   BuffChar += data1;BuffChar += data2;break;
    case ProductID_7    :   BuffChar += data1;BuffChar += data2;break;
    case ProductID_8    :   BuffChar += data1;BuffChar += data2;break;
    case ProductID_9    :   BuffChar += data1;BuffChar += data2;break;
    case ProductID_a    :   BuffChar += data1;BuffChar += data2; break;
    case ProductID_b    :   BuffChar += data1;BuffChar += data2;break;
    case ProductID_c    :   BuffChar += data1;BuffChar += data2;break;
    case ProductID_d    :   BuffChar += data1;BuffChar += data2;break;
    case ProductID_e    :   BuffChar += data1;BuffChar += data2;break;
    case ProductID_f    :   BuffChar += data1;BuffChar += data2;
                            WritePrivateProfileString(GS_INI_SECTION_PRO,GS_INI_KEY_ID,BuffChar.c_str(),GS_INI_FILE);
                            BuffChar.clear();
                            break;

    case ProductSN_0    :   break;
    case ProductSN_1    :   break;

    case ControlerSN_0	:   BUffInt = ((data2<<8) + data1); break;
    case ControlerSN_1	:   BUffInt += ((data2<<24) + (data1<<16));
                            WritePrivateProfileInt(GS_INI_SECTION__PCB,GS_INI_KEY_EBAKIWI0011,BUffInt,GS_INI_CALI_FILE);
                            BUffInt = 0;
                            break;

    case DriverSN_0     :   BUffInt = ((data2<<8) + data1); break;
    case DriverSN_1     :   BUffInt += ((data2<<24) + (data1<<16));
                            WritePrivateProfileInt(GS_INI_SECTION__PCB,GS_INI_KEY_EBAKIWI0015,BUffInt,GS_INI_CALI_FILE);
                            BUffInt = 0;
                            break;

    case LoaderSN_0      :  BUffInt = ((data2<<8) + data1); break;
    case LoaderSN_1      :  BUffInt += ((data2<<24) + (data1<<16));
                            WritePrivateProfileInt(GS_INI_SECTION__PCB,GS_INI_KEY_EBAKIWI0016,BUffInt,GS_INI_CALI_FILE);
                            BUffInt = 0;
                            break;
    /*
    case TCP_IPv4_0      :  break;
    case TCP_IPv4_1      :  break;
    case MAC_ADDR_0      :  break;
    case MAC_ADDR_1      :  break;
    case MAC_ADDR_2      :  break;
    */
    case TCP_PortLocal	 :  BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_TCP_Socket,GS_INI_KEY_PortLocal,BUffInt,GS_INI_HARD_FILE);
                            BUffInt = 0;
                            break;
    case TCP_HansPort	 :  BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_TCP_Socket,GS_INI_KEY_HansPort,BUffInt,GS_INI_HARD_FILE);
                            BUffInt = 0;
                            break;
    /*
    case TCP_IPv6_0      :break;
    case TCP_IPv6_1      :break;
    case TCP_IPv6_2       :break;
    case TCP_IPv6_3       :break;
    case TCP_IPv6_4       :break;
    case TCP_IPv6_5       :break;
    case TCP_IPv6_6       :break;
    case TCP_IPv6_7      :break;
    */
    case Module_LD       :  BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_MODULE,GS_INI_KEY_LD,BUffInt,GS_INI_HARD_FILE);
                            BUffInt = 0;
                            break;
    case Module_Level	 :  BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_MODULE,GS_INI_KEY_LEVEL,BUffInt,GS_INI_HARD_FILE);
                            BUffInt = 0;
                            break;
    case Module_OutPut	 :  BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_MODULE,GS_INI_KEY_OUTPUT,BUffInt,GS_INI_HARD_FILE);
                            BUffInt = 0;
                            break;
    case Module_Therm	 :  BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_MODULE,GS_INI_KEY_THERM,BUffInt,GS_INI_HARD_FILE);
                            BUffInt = 0;
                            break;
    case Module_Modif	 :  BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_MODULE,GS_INI_KEY_MODIF,BUffInt,GS_INI_HARD_FILE);
                            BUffInt = 0;
                            break;
    case Module_DisableLD : BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_MODULE,GS_INI_KEY_DISABLELD,BUffInt,GS_INI_HARD_FILE);
                            BUffInt = 0;
                            break;
    case Module_Disable0  : BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_MODULE,GS_INI_KEY_DISABLE0,BUffInt,GS_INI_HARD_FILE);
                            BUffInt = 0;
                            break;
    case Module_Disable1  : BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_MODULE,GS_INI_KEY_DISABLE1,BUffInt,GS_INI_HARD_FILE);
                            BUffInt = 0;
                            break;
    case Module_Disable2  : BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_MODULE,GS_INI_KEY_DISABLE2,BUffInt,GS_INI_HARD_FILE);
                            BUffInt = 0;
                            break;
    case Range_Pulse_Max :  BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_SET,GS_INI_KEY_PULMAX,BUffInt,GS_INI_HARD_FILE);
                            BUffInt = 0;
                            break;
    case Range_Pulse_Min :  BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_SET,GS_INI_KEY_PULMIN,BUffInt,GS_INI_HARD_FILE);
                            BUffInt = 0;
                            break;
    case Range_Freq_Max  :  BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_SET,GS_INI_KEY_FREQMAX,BUffInt,GS_INI_HARD_FILE);
                            BUffInt = 0;
                            break;
    case Range_Freq_Min  :  BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_SET,GS_INI_KEY_FREQMIN,BUffInt,GS_INI_HARD_FILE);
                            BUffInt = 0;
                            break;
    case Range_Root_Min :   BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_SET,GS_INI_KEY_ROOTMIN,BUffInt,GS_INI_HARD_FILE);
                            BUffInt = 0;
                            break;
    case Range_Root_Max  :  BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_SET,GS_INI_KEY_ROOTMAX,BUffInt,GS_INI_HARD_FILE);
                            BUffInt = 0;
                            break;
    case Init_IAPCnt     :  BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_SET,GS_INI_KEY_IAPCNT,BUffInt,GS_INI_HARD_FILE);
                            BUffInt = 0;
                            break;
    case Init_Estop     :   BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_SET,GS_INI_KEY_ESTOP,BUffInt,GS_INI_HARD_FILE);
                            BUffInt = 0;
                            break;
    case Init_Mtype     :   BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_SET,GS_INI_KEY_MOTORTYPE,BUffInt,GS_INI_HARD_FILE);
                            BUffInt = 0;
                            break;
    case Init_Etype     :   BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_SET,GS_INI_KEY_EOMTYPE,BUffInt,GS_INI_HARD_FILE);
                            BUffInt = 0;
                            break;
    case Init_DBModel  :    BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_SET,GS_INI_KEY_DBMODEL,BUffInt,GS_INI_HARD_FILE);
                            BUffInt = 0;
                            break;
    case Init_LatchEnable : BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_SET,GS_INI_KEY_LATCH,BUffInt,GS_INI_HARD_FILE);
                            BUffInt = 0;
                            break;
    case Init_LatchSource:	BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_SET,GS_INI_KEY_LATCHSOURCE,BUffInt,GS_INI_HARD_FILE);
                            BUffInt = 0;
                            break;
    case Init_LatchWidth :  BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_SET,GS_INI_KEY_LATCHWIDTH,BUffInt,GS_INI_HARD_FILE);
                            BUffInt = 0;
                            break;
      /*
    case Init_RegFreePair_0	 :break;
    case Init_RegFreePair_1	 :break;
    case Init_RegFreePair_2	 :break;
    case Init_RegFreePair_3	 :break;
    case Init_RegFreePair_4	 :break;
    case Init_RegFreePair_5	 :break;
    case Init_RegFreePair_6	 :break;
    case Init_RegFreePair_7	 :break;
    case Init_RegFreePair_8	 :break;
    case Init_RegFreePair_9	 :break;
    case Init_RegFreePair_a	 :break;
    case Init_RegFreePair_b	 :break;
    case Init_RegFreePair_c	 :break;
    case Init_RegFreePair_d	 :break;
    case Init_RegFreePair_e	 :break;
    case Init_RegFreePair_f	 :break;
    case Init_RegFreePair_10	 :break;
    case Init_RegFreePair_11	 :break;
    case Init_RegFreePair_12	 :break;
    case Init_RegFreePair_13	 :break;
    case Init_RegFreePair_14	 :break;
    case Init_RegFreePair_15	 :break;
    case Init_RegFreePair_16	 :break;
    case Init_RegFreePair_17	 :break;
    case Init_RegFreePair_18	 :break;
    case Init_RegFreePair_19	 :break;
    case Init_RegFreePair_1a	 :break;
    case Init_RegFreePair_1b	 :break;
    case Init_RegFreePair_1c	 :break;
    case Init_RegFreePair_1d	 :break;
    case Init_RegFreePair_1e	 :break;
    */

    case Seed_InitTime	 :  BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_FPGA,GS_INI_KEY_INITTIME,BUffInt,GS_INI_FILE);
                            BUffInt = 0;
                            break;
    case Seed_PDThrshd	 :  BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_PEA,GS_INI_KEY_THD,BUffInt,GS_INI_HARD_FILE);
                            BUffInt = 0;
                            break;
    case Seed_PDBias     :  BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_PEA,GS_INI_KEY_BIAS,BUffInt,GS_INI_HARD_FILE);
                            BUffInt = 0;
                            break;
    case Seed_Freq       :  BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_SEEDCFG,GS_INI_KEY_FREQ,BUffInt,GS_INI_FILE);
                            BUffInt = 0;
                            break;
    case Seed_Width      :  BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_SEEDCFG,GS_INI_KEY_WIDTH,BUffInt,GS_INI_FILE);
                            BUffInt = 0;
                            break;
    case Seed_PhaseTrail :  BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_SEEDCFG,GS_INI_KEY_PHTRAIL,BUffInt,GS_INI_FILE);
                            BUffInt = 0;
                            break;
    case Seed_PhaseFront :	BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_SEEDCFG,GS_INI_KEY_PHFRONT,BUffInt,GS_INI_FILE);
                            BUffInt = 0;
                            break;
    case Seed_PDCnt      :  BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_PEA,GS_INI_KEY_PDCNT,BUffInt,GS_INI_FILE);
                            BUffInt = 0;
                            break;
    case Seed_PFreq      :  BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_PEA,GS_INI_KEY_FREQ,BUffInt,GS_INI_FILE);
                            BUffInt = 0;
                            break;
    case Seed_Pulse0      : BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_PEA,GS_INI_KEY_PULCNT0,BUffInt,GS_INI_FILE);
                            BUffInt = 0;
                            break;
    case Seed_Pulse1      : BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_PEA,GS_INI_KEY_PULCNT1,BUffInt,GS_INI_FILE);
                            BUffInt = 0;
                            break;
    case Seed_Pulse2     :  BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_PEA,GS_INI_KEY_PULCNT2,BUffInt,GS_INI_FILE);
                            BUffInt = 0;
                            break;
    case Seed_Interval1	 :  BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_PEA,GS_INI_KEY_INTEVAL1,BUffInt,GS_INI_FILE);
                            BUffInt = 0;
                            break;
    case Seed_Interval2	 :  BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_PEA,GS_INI_KEY_INTEVAL2,BUffInt,GS_INI_FILE);
                            BUffInt = 0;
                            break;
    case Seed_Phase      :  BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_PEA,GS_INI_KEY_PGAP,BUffInt,GS_INI_FILE);
                            BUffInt = 0;
                            break;
    case Seed_X         :   BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_MOT,GS_INI_KEY_X,BUffInt,GS_INI_FILE);
                            BUffInt = 0;
                            break;
    case Seed_Y         :   BUffInt = ((data2<<8) + data1);
                            WritePrivateProfileInt(GS_INI_SECTION_MOT,GS_INI_KEY_Y,BUffInt,GS_INI_FILE);
                            BUffInt = 0;
                            break;
    /*
    case Seed_U        :    break;
    case Seed_V        :    break;
    case FreqC0_Pfreq  :    break;
    */
    case FreqC0_AdjPulse	:   BuffFloat = ((data2<<8) + data1);
                                WritePrivateProfileInt(GS_INI_SECTION_FREQ200,GS_INI_KEY_PULADJ,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC0_r3rdOrder	:   BuffFloat = ((data2<<8) + data1);
                                WritePrivateProfileInt(GS_INI_SECTION_FREQ50,GS_INI_KEY_ORDER,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;

    case FreqC0_ReadA_0      :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_ReadA_1      :  BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_KEY_R_A,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC0_ReadB_0      :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_ReadB_1      :  BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_KEY_R_B,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC0_ReadC_0     :   BuffFloat = ((data2<<8) + data1); break;
    case FreqC0_ReadC_1     :   BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_KEY_R_C,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC0_ReadD_0     :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_ReadD_1     :   BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_KEY_R_D,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC0_ReadMin_0	 :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_ReadMin_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_KEY_R_MIN,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC0_WriteA_0     :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_WriteA_1    :   BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_KEY_W_A,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC0_WriteB_2     :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_WriteB_3     :  BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_KEY_W_B,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC0_WriteC_0     :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_WriteC_1     :  BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_KEY_W_C,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC0_WriteD_2     :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_WriteD_3     :  BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_KEY_W_D,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC0_WriteMin_0   :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_WriteMin_1   :  BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_KEY_W_MIN,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC0_WriteMax_0    : BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_WriteMax_1   :  BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_KEY_W_MAX,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC0_Pmax_0       :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_Pmax_1       :  BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;

    case FreqC0_Pmax_Pulse6_0 : BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_Pmax_Pulse6_1 : BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_SECTION_PMAX_PULSE6,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC0_Pmax_Pulse7_0 : BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_Pmax_Pulse7_1 : BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_SECTION_PMAX_PULSE7,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC0_Pmax_Pulse8_0 : BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_Pmax_Pulse8_1 : BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_SECTION_PMAX_PULSE8,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC0_Pmax_Pulse9_0 : BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_Pmax_Pulse9_1 : BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_SECTION_PMAX_PULSE9,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC0_Pmax_Pulse10_0 :BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_Pmax_Pulse10_1 :BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_SECTION_PMAX_PULSE10,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC0_Pmax_Pulse11_0 :BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_Pmax_Pulse11_1 :BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_SECTION_PMAX_PULSE11,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC0_Pmax_Pulse12_0 :BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_Pmax_Pulse12_1 :BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_SECTION_PMAX_PULSE12,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC0_Pmax_Pulse13_0 :BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_Pmax_Pulse13_1 :BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_SECTION_PMAX_PULSE13,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;

    case FreqC0_P2ITarget_Pulse6_0  :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_P2ITarget_Pulse6_1  :   BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_SECTION_P2ITarget_Pulse6,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC0_P2ITarget_Pulse7_0   :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_P2ITarget_Pulse7_1   :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_SECTION_P2ITarget_Pulse7,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC0_P2ITarget_Pulse8_0   :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_P2ITarget_Pulse8_1   :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_SECTION_P2ITarget_Pulse8,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC0_P2ITarget_Pulse9_0   :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_P2ITarget_Pulse9_1   :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_SECTION_P2ITarget_Pulse9,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC0_P2ITarget_Pulse10_0	:   BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_P2ITarget_Pulse10_1	:   BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_SECTION_P2ITarget_Pulse10,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC0_P2ITarget_Pulse11_0	:   BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_P2ITarget_Pulse11_1 :   BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_SECTION_P2ITarget_Pulse11,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC0_P2ITarget_Pulse12_0	 :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_P2ITarget_Pulse12_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_SECTION_P2ITarget_Pulse12,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC0_P2ITarget_Pulse13_0	 :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_P2ITarget_Pulse13_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_SECTION_P2ITarget_Pulse13,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;

    /*
    case FreqC0_ReadA1_0     :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_ReadA1_1    :  BuffFloat += ((data2<<24) + (data1<<16));
                            WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
                            BuffFloat = 0;
                            break;
    case FreqC0_ReadB1_0     :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_ReadB1_1     :  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC0_ReadC1_0      :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_ReadC1_1     :  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC0_ReadD1_0     :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_ReadD1_1     :   BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC0_ReadMin1_0	 :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_ReadMin1_1	:  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC0_WriteA1_0	 :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_WriteA1_1	 :   BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC0_WriteB1_0	:   BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_WriteB1_1	:   BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC0_WriteC1_0	 :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_WriteC1_1	:  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC0_WriteD1_0	:   BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_WriteD1_1	:  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC0_WriteMin1_0	 :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_WriteMin1_1 :  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC0_WriteMin2_0	 :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_WriteMin2_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC0_Pmax1_0      :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_Pmax1_1     :  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;

    case FreqC0_Pmax1_Pulse6_0          :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_Pmax1_Pulse6_1          :   BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC0_Pmax1_Pulse7_0          :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_Pmax1_Pulse7_1         :  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC0_Pmax1_Pulse8_0       :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_Pmax1_Pulse8_1        :  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC0_Pmax1_Pulse9_0        :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_Pmax1_Pulse9_1        : BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC0_Pmax1_Pulse10_0      :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_Pmax1_Pulse10_1       : BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC0_Pmax1_Pulse11_0      :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_Pmax1_Pulse11_1     :  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC0_Pmax1_Pulse12_0      :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_Pmax1_Pulse12_1       :  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC0_Pmax1_Pulse13_0       :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_Pmax1_Pulse13_1       :   BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    */
    case FreqC0_P3ITarget_Pulse6_0   :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_P3ITarget_Pulse6_1   :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_SECTION_P3ITarget_Pulse6,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC0_P3ITarget_Pulse7_0   :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_P3ITarget_Pulse7_1   :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_SECTION_P3ITarget_Pulse7,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC0_P3ITarget_Pulse8_0   :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_P3ITarget_Pulse8_1   :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_SECTION_P3ITarget_Pulse8,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC0_P3ITarget_Pulse9_0   :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_P3ITarget_Pulse9_1   :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_SECTION_P3ITarget_Pulse9,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC0_P3ITarget_Pulse10_0  :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_P3ITarget_Pulse10_1  :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_SECTION_P3ITarget_Pulse10,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC0_P3ITarget_Pulse11_0  :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_P3ITarget_Pulse11_1  :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_SECTION_P3ITarget_Pulse11,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC0_P3ITarget_Pulse12_0  :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_P3ITarget_Pulse12_1  :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_SECTION_P3ITarget_Pulse12,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC0_P3ITarget_Pulse13_0  :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC0_P3ITarget_Pulse13_1  :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ50,GS_INI_SECTION_P3ITarget_Pulse13,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;

     //case FreqC1_Pfreq  :    break;
    case FreqC1_AdjPulse	:   BuffFloat = ((data2<<8) + data1);
                                WritePrivateProfileInt(GS_INI_SECTION_FREQ100,GS_INI_KEY_PULADJ,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC1_r3rdOrder	:   BuffFloat = ((data2<<8) + data1);
                                WritePrivateProfileInt(GS_INI_SECTION_FREQ100,GS_INI_KEY_ORDER,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;

    case FreqC1_ReadA_0      :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_ReadA_1      :  BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_KEY_R_A,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC1_ReadB_0      :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_ReadB_1      :  BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_KEY_R_B,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC1_ReadC_0     :   BuffFloat = ((data2<<8) + data1); break;
    case FreqC1_ReadC_1     :   BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_KEY_R_C,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC1_ReadD_0     :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_ReadD_1     :   BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_KEY_R_D,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC1_ReadMin_0	 :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_ReadMin_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_KEY_R_MIN,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC1_WriteA_0     :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_WriteA_1    :   BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_KEY_W_A,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC1_WriteB_0     :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_WriteB_1     :  BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_KEY_W_B,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC1_WriteC_0     :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_WriteC_1     :  BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_KEY_W_C,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC1_WriteD_0     :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_WriteD_1     :  BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_KEY_W_D,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC1_WriteMin_0   :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_WriteMin_1   :  BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_KEY_W_MIN,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC1_WriteMax_0    : BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_WriteMax_1   :  BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_KEY_W_MAX,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC1_Pmax_0       :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_Pmax_1       :  BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;

    case FreqC1_Pmax_Pulse6_0 : BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_Pmax_Pulse6_1 : BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_SECTION_PMAX_PULSE6,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC1_Pmax_Pulse7_0 : BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_Pmax_Pulse7_1 : BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_SECTION_PMAX_PULSE7,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC1_Pmax_Pulse8_0 : BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_Pmax_Pulse8_1 : BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_SECTION_PMAX_PULSE8,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC1_Pmax_Pulse9_0 : BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_Pmax_Pulse9_1 : BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_SECTION_PMAX_PULSE9,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC1_Pmax_Pulse10_0 :BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_Pmax_Pulse10_1 :BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_SECTION_PMAX_PULSE10,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC1_Pmax_Pulse11_0 :BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_Pmax_Pulse11_1 :BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_SECTION_PMAX_PULSE11,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC1_Pmax_Pulse12_0 :BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_Pmax_Pulse12_1 :BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_SECTION_PMAX_PULSE12,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC1_Pmax_Pulse13_0 :BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_Pmax_Pulse13_1 :BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_SECTION_PMAX_PULSE13,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;

    case FreqC1_P2ITarget_Pulse6_0  :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_P2ITarget_Pulse6_1  :   BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_SECTION_P2ITarget_Pulse6,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC1_P2ITarget_Pulse7_0   :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_P2ITarget_Pulse7_1   :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_SECTION_P2ITarget_Pulse7,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC1_P2ITarget_Pulse8_0   :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_P2ITarget_Pulse8_1   :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_SECTION_P2ITarget_Pulse8,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC1_P2ITarget_Pulse9_0   :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_P2ITarget_Pulse9_1   :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_SECTION_P2ITarget_Pulse9,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC1_P2ITarget_Pulse10_0	:   BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_P2ITarget_Pulse10_1	:   BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_SECTION_P2ITarget_Pulse10,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC1_P2ITarget_Pulse11_0	:   BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_P2ITarget_Pulse11_1 :   BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_SECTION_P2ITarget_Pulse11,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC1_P2ITarget_Pulse12_0	 :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_P2ITarget_Pulse12_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_SECTION_P2ITarget_Pulse12,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC1_P2ITarget_Pulse13_0	 :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_P2ITarget_Pulse13_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_SECTION_P2ITarget_Pulse13,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;

    /*
    case FreqC1_ReadA1_0     :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_ReadA1_1    :  BuffFloat += ((data2<<24) + (data1<<16));
                            WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
                            BuffFloat = 0;
                            break;
    case FreqC1_ReadB1_0     :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_ReadB1_1     :  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC1_ReadC1_0      :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_ReadC1_1     :  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC1_ReadD1_0     :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_ReadD1_1     :   BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC1_ReadMin1_0	 :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_ReadMin1_1	:  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC1_WriteA1_0	 :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_WriteA1_1	 :   BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC1_WriteB1_0	:   BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_WriteB1_1	:   BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC1_WriteC1_0	 :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_WriteC1_1	:  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC1_WriteD1_0	:   BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_WriteD1_1	:  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC1_WriteMin1_0	 :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_WriteMin1_1 :  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC1_WriteMin2_0	 :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_WriteMin2_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC1_Pmax1_0      :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_Pmax1_1     :  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;

    case FreqC1_Pmax1_Pulse6_0          :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_Pmax1_Pulse6_1          :   BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC1_Pmax1_Pulse7_0          :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_Pmax1_Pulse7_1         :  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC1_Pmax1_Pulse8_0       :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_Pmax1_Pulse8_1        :  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC1_Pmax1_Pulse9_0        :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_Pmax1_Pulse9_1        : BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC1_Pmax1_Pulse10_0      :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_Pmax1_Pulse10_1       : BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC1_Pmax1_Pulse11_0      :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_Pmax1_Pulse11_1     :  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC1_Pmax1_Pulse12_0      :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_Pmax1_Pulse12_1       :  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC1_Pmax1_Pulse13_0       :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_Pmax1_Pulse13_1       :   BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    */
    case FreqC1_P3ITarget_Pulse6_0   :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_P3ITarget_Pulse6_1   :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_SECTION_P3ITarget_Pulse6,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC1_P3ITarget_Pulse7_0   :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_P3ITarget_Pulse7_1   :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_SECTION_P3ITarget_Pulse7,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC1_P3ITarget_Pulse8_0   :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_P3ITarget_Pulse8_1   :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_SECTION_P3ITarget_Pulse8,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC1_P3ITarget_Pulse9_0   :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_P3ITarget_Pulse9_1   :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_SECTION_P3ITarget_Pulse9,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC1_P3ITarget_Pulse10_0  :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_P3ITarget_Pulse10_1  :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_SECTION_P3ITarget_Pulse10,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC1_P3ITarget_Pulse11_0  :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_P3ITarget_Pulse11_1  :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_SECTION_P3ITarget_Pulse11,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC1_P3ITarget_Pulse12_0  :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_P3ITarget_Pulse12_1  :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_SECTION_P3ITarget_Pulse12,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC1_P3ITarget_Pulse13_0  :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC1_P3ITarget_Pulse13_1  :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ100,GS_INI_SECTION_P3ITarget_Pulse13,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;


    //case FreqC2_Pfreq  :    break;
    case FreqC2_AdjPulse	:   BuffFloat = ((data2<<8) + data1);
                                WritePrivateProfileInt(GS_INI_SECTION_FREQ200,GS_INI_KEY_PULADJ,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC2_r3rdOrder	:   BuffFloat = ((data2<<8) + data1);
                                WritePrivateProfileInt(GS_INI_SECTION_FREQ200,GS_INI_KEY_ORDER,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;

    case FreqC2_ReadA_0      :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_ReadA_1      :  BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_KEY_R_A,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC2_ReadB_0      :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_ReadB_1      :  BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_KEY_R_B,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC2_ReadC_0     :   BuffFloat = ((data2<<8) + data1); break;
    case FreqC2_ReadC_1     :   BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_KEY_R_C,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC2_ReadD_0     :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_ReadD_1     :   BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_KEY_R_D,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC2_ReadMin_0	 :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_ReadMin_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_KEY_R_MIN,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC2_WriteA_0     :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_WriteA_1    :   BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_KEY_W_A,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC2_WriteB_0     :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_WriteB_1     :  BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_KEY_W_B,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC2_WriteC_0     :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_WriteC_1     :  BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_KEY_W_C,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC2_WriteD_0     :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_WriteD_1     :  BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_KEY_W_D,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC2_WriteMin_0   :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_WriteMin_1   :  BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_KEY_W_MIN,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC2_WriteMax_0    : BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_WriteMax_1   :  BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_KEY_W_MAX,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC2_Pmax_0       :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_Pmax_1       :  BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;

    case FreqC2_Pmax_Pulse6_0 : BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_Pmax_Pulse6_1 : BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_SECTION_PMAX_PULSE6,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC2_Pmax_Pulse7_0 : BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_Pmax_Pulse7_1 : BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_SECTION_PMAX_PULSE7,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC2_Pmax_Pulse8_0 : BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_Pmax_Pulse8_1 : BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_SECTION_PMAX_PULSE8,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC2_Pmax_Pulse9_0 : BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_Pmax_Pulse9_1 : BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_SECTION_PMAX_PULSE9,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC2_Pmax_Pulse10_0 :BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_Pmax_Pulse10_1 :BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_SECTION_PMAX_PULSE10,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC2_Pmax_Pulse11_0 :BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_Pmax_Pulse11_1 :BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_SECTION_PMAX_PULSE11,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC2_Pmax_Pulse12_0 :BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_Pmax_Pulse12_1 :BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_SECTION_PMAX_PULSE12,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case FreqC2_Pmax_Pulse13_0 :BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_Pmax_Pulse13_1 :BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_SECTION_PMAX_PULSE13,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;

    case FreqC2_P2ITarget_Pulse6_0  :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_P2ITarget_Pulse6_1  :   BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_SECTION_P2ITarget_Pulse6,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC2_P2ITarget_Pulse7_0   :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_P2ITarget_Pulse7_1   :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_SECTION_P2ITarget_Pulse7,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC2_P2ITarget_Pulse8_0   :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_P2ITarget_Pulse8_1   :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_SECTION_P2ITarget_Pulse8,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC2_P2ITarget_Pulse9_0   :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_P2ITarget_Pulse9_1   :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_SECTION_P2ITarget_Pulse9,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC2_P2ITarget_Pulse10_0	:   BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_P2ITarget_Pulse10_1	:   BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_SECTION_P2ITarget_Pulse10,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC2_P2ITarget_Pulse11_0	:   BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_P2ITarget_Pulse11_1 :   BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_SECTION_P2ITarget_Pulse11,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC2_P2ITarget_Pulse12_0	 :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_P2ITarget_Pulse12_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_SECTION_P2ITarget_Pulse12,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC2_P2ITarget_Pulse13_0	 :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_P2ITarget_Pulse13_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_SECTION_P2ITarget_Pulse13,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;

    /*
    case FreqC2_ReadA1_0     :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_ReadA1_1    :  BuffFloat += ((data2<<24) + (data1<<16));
                            WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
                            BuffFloat = 0;
                            break;
    case FreqC2_ReadB1_0     :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_ReadB1_1     :  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC2_ReadC1_0      :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_ReadC1_1     :  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC2_ReadD1_0     :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_ReadD1_1     :   BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC2_ReadMin1_0	 :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_ReadMin1_1	:  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC2_WriteA1_0	 :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_WriteA1_1	 :   BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC2_WriteB1_0	:   BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_WriteB1_1	:   BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC2_WriteC1_0	 :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_WriteC1_1	:  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC2_WriteD1_0	:   BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_WriteD1_1	:  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC2_WriteMin1_0	 :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_WriteMin1_1 :  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC2_WriteMin2_0	 :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_WriteMin2_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC2_Pmax1_0      :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_Pmax1_1     :  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;

    case FreqC2_Pmax1_Pulse6_0          :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_Pmax1_Pulse6_1          :   BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC2_Pmax1_Pulse7_0          :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_Pmax1_Pulse7_1         :  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC2_Pmax1_Pulse8_0       :   BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_Pmax1_Pulse8_1        :  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC2_Pmax1_Pulse9_0        :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_Pmax1_Pulse9_1        : BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC2_Pmax1_Pulse10_0      :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_Pmax1_Pulse10_1       : BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC2_Pmax1_Pulse11_0      :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_Pmax1_Pulse11_1     :  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC2_Pmax1_Pulse12_0      :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_Pmax1_Pulse12_1       :  BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    case FreqC2_Pmax1_Pulse13_0       :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_Pmax1_Pulse13_1       :   BuffFloat += ((data2<<24) + (data1<<16));
        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_KEY_PMAX,BuffFloat,GS_INI_FILE);
        BuffFloat = 0;
        break;
    */
    case FreqC2_P3ITarget_Pulse6_0   :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_P3ITarget_Pulse6_1   :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_SECTION_P3ITarget_Pulse6,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC2_P3ITarget_Pulse7_0   :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_P3ITarget_Pulse7_1   :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_SECTION_P3ITarget_Pulse7,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC2_P3ITarget_Pulse8_0   :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_P3ITarget_Pulse8_1   :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_SECTION_P3ITarget_Pulse8,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC2_P3ITarget_Pulse9_0   :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_P3ITarget_Pulse9_1   :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_SECTION_P3ITarget_Pulse9,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC2_P3ITarget_Pulse10_0  :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_P3ITarget_Pulse10_1  :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_SECTION_P3ITarget_Pulse10,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC2_P3ITarget_Pulse11_0  :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_P3ITarget_Pulse11_1  :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_SECTION_P3ITarget_Pulse11,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC2_P3ITarget_Pulse12_0  :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_P3ITarget_Pulse12_1  :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_SECTION_P3ITarget_Pulse12,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;
    case FreqC2_P3ITarget_Pulse13_0  :  BuffFloat = ((data2<<8) + data1);break;
    case FreqC2_P3ITarget_Pulse13_1  :  BuffFloat += ((data2<<24) + (data1<<16));
                                        WritePrivateProfileDouble(GS_INI_SECTION_FREQ200,GS_INI_SECTION_P3ITarget_Pulse13,BuffFloat,GS_INI_FILE);
                                        BuffFloat = 0;
                                        break;

    //case P0_ConfigFlag        :break;
    case P0_CurrXC           :  BUffInt = ((data2<<8) + data1);
                                WritePrivateProfileInt(GS_INI_SECTION_P0,GS_INI_KEY_CURRXC,BUffInt,GS_INI_X_FILE);
                                BUffInt = 0;
                                break;
    case P0_TempXC           :  BUffInt = ((data2<<8) + data1);
                                WritePrivateProfileInt(GS_INI_SECTION_P0,GS_INI_KEY_TEMPXC,BUffInt,GS_INI_X_FILE);
                                BUffInt = 0;
                                break;
    case P0_Current_0         : BuffFloat = ((data2<<8) + data1);break;
    case P0_Current_1         : BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_P0,GS_INI_KEY_I,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case P0_Temperature_0	 :  BuffFloat = ((data2<<8) + data1);break;
    case P0_Temperature_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_P0,GS_INI_KEY_T,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case P0_CurrentLimit_0	 :  BuffFloat = ((data2<<8) + data1);break;
    case P0_CurrentLimit_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_P0,GS_INI_KEY_IL,BuffFloat,GS_INI_FILE);
                                BuffFloat = 0;
                                break;
    case P0_Idelta_0         :  BuffFloat = ((data2<<8) + data1);break;
    case P0_Idelta_1         :  BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_P0,GS_INI_KEY_I_DELTA,BuffFloat,GS_INI_HARD_FILE);
                                BuffFloat = 0;
                                break;
    case P0_Tdelta_0         :  BuffFloat = ((data2<<8) + data1);break;
    case P0_Tdelta_1         :  BuffFloat += ((data2<<24) + (data1<<16));
                                WritePrivateProfileDouble(GS_INI_SECTION_P0,GS_INI_KEY_T_DELTA,BuffFloat,GS_INI_HARD_FILE);
                                BuffFloat = 0;
                                break;
    case P0_CurrentControlEnable :  BUffInt = ((data2<<8) + data1);
                                    WritePrivateProfileInt(GS_INI_SECTION_P0,GS_INI_KEY_CURRCTRLEN,BUffInt,GS_INI_HARD_FILE);
                                    BUffInt = 0;
                                    break;
    case P0_TempControlEnable	 :  BUffInt = ((data2<<8) + data1);
                                    WritePrivateProfileInt(GS_INI_SECTION_P0,GS_INI_KEY_TEMPCTRLEN,BUffInt,GS_INI_HARD_FILE);
                                    BUffInt = 0;
                                    break;
    case P0_EnableKd              : BUffInt = ((data2<<8) + data1);
                                    WritePrivateProfileInt(GS_INI_SECTION_P0,GS_INI_KEY_ENAKD,BUffInt,GS_INI_HARD_FILE);
                                    BUffInt = 0;
                                    break;
    case P0_TimerInterval         : BUffInt = ((data2<<8) + data1);
                                    WritePrivateProfileInt(GS_INI_SECTION_P0,GS_INI_KEY_INTERVAL,BUffInt,GS_INI_HARD_FILE);
                                    BUffInt = 0;
                                    break;
    case P0_AdjustPeriod          : BUffInt = ((data2<<8) + data1);
                                    WritePrivateProfileInt(GS_INI_SECTION_P0,GS_INI_KEY_ADJ,BUffInt,GS_INI_HARD_FILE);
                                    BUffInt = 0;
                                    break;
    case P0_Kp_0         :          BuffFloat = ((data2<<8) + data1);break;
    case P0_Kp_1          :         BuffFloat += ((data2<<24) + (data1<<16));
                                    WritePrivateProfileDouble(GS_INI_SECTION_P0,GS_INI_KEY_KP,BuffFloat,GS_INI_HARD_FILE);
                                    BuffFloat = 0;
                                    break;
    case P0_Ki_0          :         BuffFloat = ((data2<<8) + data1);break;
    case P0_Ki_1          :         BuffFloat += ((data2<<24) + (data1<<16));
                                    WritePrivateProfileDouble(GS_INI_SECTION_P0,GS_INI_KEY_KI,BuffFloat,GS_INI_HARD_FILE);
                                    BuffFloat = 0;
                                    break;
    case P0_Kd_0          :         BuffFloat = ((data2<<8) + data1);break;
    case P0_Kd_1          :         BuffFloat += ((data2<<24) + (data1<<16));
                                    WritePrivateProfileDouble(GS_INI_SECTION_P0,GS_INI_KEY_KD,BuffFloat,GS_INI_HARD_FILE);
                                    BuffFloat = 0;
                                    break;
    case P0_RegAdj        :         BUffInt = ((data2<<8) + data1);
                                    WritePrivateProfileInt(GS_INI_SECTION_P0,GS_INI_KEY_REGADJ,BUffInt,GS_INI_HARD_FILE);
                                    BUffInt = 0;
                                    break;
    case P0_RegPumpI      :         BUffInt = ((data2<<8) + data1);
                                    WritePrivateProfileInt(GS_INI_SECTION_P0,GS_INI_KEY_REGPMPI,BUffInt,GS_INI_HARD_FILE);
                                    BUffInt = 0;
                                    break;
    case P0_TempADC      :          BUffInt = ((data2<<8) + data1);
                                    WritePrivateProfileInt(GS_INI_SECTION_P0,GS_INI_KEY_TADC,BUffInt,GS_INI_HARD_FILE);
                                    BUffInt = 0;
                                    break;
    case P0_CurrADC       :         BUffInt = ((data2<<8) + data1);
                                    WritePrivateProfileInt(GS_INI_SECTION_P0,GS_INI_KEY_IADC,BUffInt,GS_INI_HARD_FILE);
                                    BUffInt = 0;
                                    break;
    case P0_Decode        :         BUffInt = ((data2<<8) + data1);
                                    WritePrivateProfileInt(GS_INI_SECTION_P0,GS_INI_KEY_HIGHDRV,BUffInt,GS_INI_HARD_FILE);
                                    BUffInt = 0;
                                    break;
    case P0_OpenBit      :          BUffInt = ((data2<<8) + data1);
                                    WritePrivateProfileInt(GS_INI_SECTION_P0,GS_INI_KEY_OPENBIT,BUffInt,GS_INI_HARD_FILE);
                                    BUffInt = 0;
                                    break;
    case P0_TLBit         :         BUffInt = ((data2<<8) + data1);
                                    WritePrivateProfileInt(GS_INI_SECTION_P0,GS_INI_KEY_TLBIT,BUffInt,GS_INI_HARD_FILE);
                                    BUffInt = 0;
                                    break;
    case P0_CurSetA_0	 :          BuffFloat = ((data2<<8) + data1);break;
    case P0_CurSetA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
                                    WritePrivateProfileDouble(GS_INI_SECTION_P0,GS_INI_KEY_ISETA,BuffFloat,GS_INI_CALI_FILE);
                                    BuffFloat = 0;
                                    break;
    case P0_CurSetB_0	 :          BuffFloat = ((data2<<8) + data1);break;
    case P0_CurSetB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
                                    WritePrivateProfileDouble(GS_INI_SECTION_P0,GS_INI_KEY_ISETB,BuffFloat,GS_INI_CALI_FILE);
                                    BuffFloat = 0;
                                    break;
    case P0_CurReadA_0	 :          BuffFloat = ((data2<<8) + data1);break;
    case P0_CurReadA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
                                    WritePrivateProfileDouble(GS_INI_SECTION_P0,GS_INI_KEY_IREADA,BuffFloat,GS_INI_CALI_FILE);
                                    BuffFloat = 0;
                                    break;
    case P0_CurReadB_0	 :          BuffFloat = ((data2<<8) + data1);break;
    case P0_CurReadB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
                                    WritePrivateProfileDouble(GS_INI_SECTION_P0,GS_INI_KEY_IREADB,BuffFloat,GS_INI_CALI_FILE);
                                    BuffFloat = 0;
                                    break;
    case P0_RthA_0        :         BuffFloat = ((data2<<8) + data1);break;
    case P0_RthA_1        :         BuffFloat += ((data2<<24) + (data1<<16));
                                    WritePrivateProfileDouble(GS_INI_SECTION_P0,GS_INI_KEY_RTHA,BuffFloat,GS_INI_CALI_FILE);
                                    BuffFloat = 0;
                                    break;
    case P0_RthB_0        :         BuffFloat = ((data2<<8) + data1);break;
    case P0_RthB_1        :         BuffFloat += ((data2<<24) + (data1<<16));
                                    WritePrivateProfileDouble(GS_INI_SECTION_P0,GS_INI_KEY_RTHB,BuffFloat,GS_INI_CALI_FILE);
                                    BuffFloat = 0;
                                    break;
    case P0_VthA_0       :          BuffFloat = ((data2<<8) + data1);break;
    case P0_VthA_1       :          BuffFloat += ((data2<<24) + (data1<<16));
                                    WritePrivateProfileDouble(GS_INI_SECTION_P0,GS_INI_KEY_VTHA,BuffFloat,GS_INI_CALI_FILE);
                                    BuffFloat = 0;
                                    break;
    case P0_VthB_0        :         BuffFloat = ((data2<<8) + data1);break;
    case P0_VthB_1        :         BuffFloat += ((data2<<24) + (data1<<16));
                                    WritePrivateProfileDouble(GS_INI_SECTION_P0,GS_INI_KEY_VTHB,BuffFloat,GS_INI_CALI_FILE);
                                    BuffFloat = 0;
                                    break;
    case P0_TemReadA_0	 :          BuffFloat = ((data2<<8) + data1);break;
    case P0_TemReadA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
                                    WritePrivateProfileDouble(GS_INI_SECTION_P0,GS_INI_KEY_TREADA,BuffFloat,GS_INI_CALI_FILE);
                                    BuffFloat = 0;
                                    break;
    case P0_TemReadB_0	 :          BuffFloat = ((data2<<8) + data1);break;
    case P0_TemReadB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P0,GS_INI_KEY_TREADB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
									/*case P0_NTC_SN_0      :break;
									  case P0_NTC_SN_1      :break;
									  case P0_NTC_B_0       :break;
									  case P0_NTC_B_1       :break;
									  case P0_NTC_Rc_0      :break;
									  case P0_NTC_Rc_1      :break;
									  case P0_NTC_R0_0      :break;
									  case P0_NTC_R0_1      :break;
									  case P0_TempCalRaw_0	 :break;
									  case P0_TempCalRaw_1	 :break;
									 */
	case P0_PwrSetA_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P0_PwrSetA_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P0,GS_INI_KEY_PSETA,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P0_PwrSetB_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P0_PwrSetB_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P0,GS_INI_KEY_PSETB,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P0_PwrReadA_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P0_PwrReadA_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P0,GS_INI_KEY_PREADA,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P0_PwrReadB_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P0_PwrReadB_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P0,GS_INI_KEY_PREADB,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
								//case P0_Module_SN_0	 :break;
								//case P0_Module_SN_1	 :break;

								////////////////////////////////////////////
								//case P1_ConfigFlag        :break;
	case P1_CurrXC           :  BUffInt = ((data2<<8) + data1);
								WritePrivateProfileInt(GS_INI_SECTION_P1,GS_INI_KEY_CURRXC,BUffInt,GS_INI_X_FILE);
								BUffInt = 0;
								break;
	case P1_TempXC           :  BUffInt = ((data2<<8) + data1);
								WritePrivateProfileInt(GS_INI_SECTION_P1,GS_INI_KEY_TEMPXC,BUffInt,GS_INI_X_FILE);
								BUffInt = 0;
								break;
	case P1_Current_0         : BuffFloat = ((data2<<8) + data1);break;
	case P1_Current_1         : BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P1,GS_INI_KEY_I,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P1_Temperature_0	 :  BuffFloat = ((data2<<8) + data1);break;
	case P1_Temperature_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P1,GS_INI_KEY_T,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P1_CurrentLimit_0	 :  BuffFloat = ((data2<<8) + data1);break;
	case P1_CurrentLimit_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P1,GS_INI_KEY_IL,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P1_Idelta_0         :  BuffFloat = ((data2<<8) + data1);break;
	case P1_Idelta_1         :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P1,GS_INI_KEY_I_DELTA,BuffFloat,GS_INI_HARD_FILE);
								BuffFloat = 0;
								break;
	case P1_Tdelta_0         :  BuffFloat = ((data2<<8) + data1);break;
	case P1_Tdelta_1         :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P1,GS_INI_KEY_T_DELTA,BuffFloat,GS_INI_HARD_FILE);
								BuffFloat = 0;
								break;
	case P1_CurrentControlEnable :  BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P1,GS_INI_KEY_CURRCTRLEN,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P1_TempControlEnable	 :  BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P1,GS_INI_KEY_TEMPCTRLEN,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P1_EnableKd              : BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P1,GS_INI_KEY_ENAKD,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P1_TimerInterval         : BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P1,GS_INI_KEY_INTERVAL,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P1_AdjustPeriod          : BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P1,GS_INI_KEY_ADJ,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P1_Kp_0         :          BuffFloat = ((data2<<8) + data1);break;
	case P1_Kp_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P1,GS_INI_KEY_KP,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case P1_Ki_0          :         BuffFloat = ((data2<<8) + data1);break;
	case P1_Ki_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P1,GS_INI_KEY_KI,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case P1_Kd_0          :         BuffFloat = ((data2<<8) + data1);break;
	case P1_Kd_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P1,GS_INI_KEY_KD,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case P1_RegAdj        :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P1,GS_INI_KEY_REGADJ,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P1_RegPumpI      :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P1,GS_INI_KEY_REGPMPI,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P1_TempADC      :          BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P1,GS_INI_KEY_TADC,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P1_CurrADC       :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P1,GS_INI_KEY_IADC,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P1_Decode        :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P1,GS_INI_KEY_HIGHDRV,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P1_OpenBit      :          BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P1,GS_INI_KEY_OPENBIT,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P1_TLBit         :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P1,GS_INI_KEY_TLBIT,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P1_CurSetA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P1_CurSetA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P1,GS_INI_KEY_ISETA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P1_CurSetB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P1_CurSetB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P1,GS_INI_KEY_ISETB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P1_CurReadA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P1_CurReadA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P1,GS_INI_KEY_IREADA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P1_CurReadB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P1_CurReadB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P1,GS_INI_KEY_IREADB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P1_RthA_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P1_RthA_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P1,GS_INI_KEY_RTHA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P1_RthB_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P1_RthB_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P1,GS_INI_KEY_RTHB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P1_VthA_0       :          BuffFloat = ((data2<<8) + data1);break;
	case P1_VthA_1       :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P1,GS_INI_KEY_VTHA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P1_VthB_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P1_VthB_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P1,GS_INI_KEY_VTHB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P1_TemReadA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P1_TemReadA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P1,GS_INI_KEY_TREADA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P1_TemReadB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P1_TemReadB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P1,GS_INI_KEY_TREADB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
									/*case P1_NTC_SN_0      :break;
									  case P1_NTC_SN_1      :break;
									  case P1_NTC_B_0       :break;
									  case P1_NTC_B_1       :break;
									  case P1_NTC_Rc_0      :break;
									  case P1_NTC_Rc_1      :break;
									  case P1_NTC_R0_0      :break;
									  case P1_NTC_R0_1      :break;
									  case P1_TempCalRaw_0	 :break;
									  case P1_TempCalRaw_1	 :break;
									 */
	case P1_PwrSetA_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P1_PwrSetA_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P1,GS_INI_KEY_PSETA,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P1_PwrSetB_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P1_PwrSetB_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P1,GS_INI_KEY_PSETB,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P1_PwrReadA_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P1_PwrReadA_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P1,GS_INI_KEY_PREADA,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P1_PwrReadB_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P1_PwrReadB_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P1,GS_INI_KEY_PREADB,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
								//case P1_Module_SN_0	 :break;
								//case P1_Module_SN_1	 :break;




								////
								//case P2_ConfigFlag        :break;
	case P2_CurrXC           :  BUffInt = ((data2<<8) + data1);
								WritePrivateProfileInt(GS_INI_SECTION_P2,GS_INI_KEY_CURRXC,BUffInt,GS_INI_X_FILE);
								BUffInt = 0;
								break;
	case P2_TempXC           :  BUffInt = ((data2<<8) + data1);
								WritePrivateProfileInt(GS_INI_SECTION_P2,GS_INI_KEY_TEMPXC,BUffInt,GS_INI_X_FILE);
								BUffInt = 0;
								break;
	case P2_Current_0         : BuffFloat = ((data2<<8) + data1);break;
	case P2_Current_1         : BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P2,GS_INI_KEY_I,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P2_Temperature_0	 :  BuffFloat = ((data2<<8) + data1);break;
	case P2_Temperature_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P2,GS_INI_KEY_T,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P2_CurrentLimit_0	 :  BuffFloat = ((data2<<8) + data1);break;
	case P2_CurrentLimit_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P2,GS_INI_KEY_IL,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P2_Idelta_0         :  BuffFloat = ((data2<<8) + data1);break;
	case P2_Idelta_1         :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P2,GS_INI_KEY_I_DELTA,BuffFloat,GS_INI_HARD_FILE);
								BuffFloat = 0;
								break;
	case P2_Tdelta_0         :  BuffFloat = ((data2<<8) + data1);break;
	case P2_Tdelta_1         :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P2,GS_INI_KEY_T_DELTA,BuffFloat,GS_INI_HARD_FILE);
								BuffFloat = 0;
								break;
	case P2_CurrentControlEnable :  BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P2,GS_INI_KEY_CURRCTRLEN,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P2_TempControlEnable	 :  BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P2,GS_INI_KEY_TEMPCTRLEN,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P2_EnableKd              : BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P2,GS_INI_KEY_ENAKD,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P2_TimerInterval         : BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P2,GS_INI_KEY_INTERVAL,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P2_AdjustPeriod          : BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P2,GS_INI_KEY_ADJ,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P2_Kp_0         :          BuffFloat = ((data2<<8) + data1);break;
	case P2_Kp_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P2,GS_INI_KEY_KP,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case P2_Ki_0          :         BuffFloat = ((data2<<8) + data1);break;
	case P2_Ki_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P2,GS_INI_KEY_KI,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case P2_Kd_0          :         BuffFloat = ((data2<<8) + data1);break;
	case P2_Kd_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P2,GS_INI_KEY_KD,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case P2_RegAdj        :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P2,GS_INI_KEY_REGADJ,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P2_RegPumpI      :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P2,GS_INI_KEY_REGPMPI,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P2_TempADC      :          BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P2,GS_INI_KEY_TADC,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P2_CurrADC       :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P2,GS_INI_KEY_IADC,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P2_Decode        :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P2,GS_INI_KEY_HIGHDRV,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P2_OpenBit      :          BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P2,GS_INI_KEY_OPENBIT,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P2_TLBit         :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P2,GS_INI_KEY_TLBIT,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P2_CurSetA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P2_CurSetA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P2,GS_INI_KEY_ISETA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P2_CurSetB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P2_CurSetB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P2,GS_INI_KEY_ISETB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P2_CurReadA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P2_CurReadA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P2,GS_INI_KEY_IREADA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P2_CurReadB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P2_CurReadB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P2,GS_INI_KEY_IREADB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P2_RthA_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P2_RthA_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P2,GS_INI_KEY_RTHA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P2_RthB_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P2_RthB_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P2,GS_INI_KEY_RTHB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P2_VthA_0       :          BuffFloat = ((data2<<8) + data1);break;
	case P2_VthA_1       :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P2,GS_INI_KEY_VTHA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P2_VthB_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P2_VthB_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P2,GS_INI_KEY_VTHB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P2_TemReadA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P2_TemReadA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P2,GS_INI_KEY_TREADA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P2_TemReadB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P2_TemReadB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P2,GS_INI_KEY_TREADB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
									/*case P2_NTC_SN_0      :break;
									  case P2_NTC_SN_1      :break;
									  case P2_NTC_B_0       :break;
									  case P2_NTC_B_1       :break;
									  case P2_NTC_Rc_0      :break;
									  case P2_NTC_Rc_1      :break;
									  case P2_NTC_R0_0      :break;
									  case P2_NTC_R0_1      :break;
									  case P2_TempCalRaw_0	 :break;
									  case P2_TempCalRaw_1	 :break;
									 */
	case P2_PwrSetA_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P2_PwrSetA_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P2,GS_INI_KEY_PSETA,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P2_PwrSetB_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P2_PwrSetB_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P2,GS_INI_KEY_PSETB,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P2_PwrReadA_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P2_PwrReadA_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P2,GS_INI_KEY_PREADA,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P2_PwrReadB_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P2_PwrReadB_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P2,GS_INI_KEY_PREADB,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
								//case P2_Module_SN_0	 :break;
								//case P2_Module_SN_1	 :break;

								//case P3_ConfigFlag        :break;
	case P3_CurrXC           :  BUffInt = ((data2<<8) + data1);
								WritePrivateProfileInt(GS_INI_SECTION_P3,GS_INI_KEY_CURRXC,BUffInt,GS_INI_X_FILE);
								BUffInt = 0;
								break;
	case P3_TempXC           :  BUffInt = ((data2<<8) + data1);
								WritePrivateProfileInt(GS_INI_SECTION_P3,GS_INI_KEY_TEMPXC,BUffInt,GS_INI_X_FILE);
								BUffInt = 0;
								break;
	case P3_Current_0         : BuffFloat = ((data2<<8) + data1);break;
	case P3_Current_1         : BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P3,GS_INI_KEY_I,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P3_Temperature_0	 :  BuffFloat = ((data2<<8) + data1);break;
	case P3_Temperature_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P3,GS_INI_KEY_T,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P3_CurrentLimit_0	 :  BuffFloat = ((data2<<8) + data1);break;
	case P3_CurrentLimit_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P3,GS_INI_KEY_IL,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P3_Idelta_0         :  BuffFloat = ((data2<<8) + data1);break;
	case P3_Idelta_1         :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P3,GS_INI_KEY_I_DELTA,BuffFloat,GS_INI_HARD_FILE);
								BuffFloat = 0;
								break;
	case P3_Tdelta_0         :  BuffFloat = ((data2<<8) + data1);break;
	case P3_Tdelta_1         :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P3,GS_INI_KEY_T_DELTA,BuffFloat,GS_INI_HARD_FILE);
								BuffFloat = 0;
								break;
	case P3_CurrentControlEnable :  BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P3,GS_INI_KEY_CURRCTRLEN,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P3_TempControlEnable	 :  BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P3,GS_INI_KEY_TEMPCTRLEN,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P3_EnableKd              : BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P3,GS_INI_KEY_ENAKD,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P3_TimerInterval         : BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P3,GS_INI_KEY_INTERVAL,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P3_AdjustPeriod          : BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P3,GS_INI_KEY_ADJ,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P3_Kp_0         :          BuffFloat = ((data2<<8) + data1);break;
	case P3_Kp_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P3,GS_INI_KEY_KP,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case P3_Ki_0          :         BuffFloat = ((data2<<8) + data1);break;
	case P3_Ki_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P3,GS_INI_KEY_KI,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case P3_Kd_0          :         BuffFloat = ((data2<<8) + data1);break;
	case P3_Kd_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P3,GS_INI_KEY_KD,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case P3_RegAdj        :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P3,GS_INI_KEY_REGADJ,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P3_RegPumpI      :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P3,GS_INI_KEY_REGPMPI,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P3_TempADC      :          BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P3,GS_INI_KEY_TADC,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P3_CurrADC       :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P3,GS_INI_KEY_IADC,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P3_Decode        :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P3,GS_INI_KEY_HIGHDRV,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P3_OpenBit      :          BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P3,GS_INI_KEY_OPENBIT,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P3_TLBit         :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P3,GS_INI_KEY_TLBIT,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P3_CurSetA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P3_CurSetA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P3,GS_INI_KEY_ISETA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P3_CurSetB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P3_CurSetB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P3,GS_INI_KEY_ISETB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P3_CurReadA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P3_CurReadA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P3,GS_INI_KEY_IREADA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P3_CurReadB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P3_CurReadB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P3,GS_INI_KEY_IREADB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P3_RthA_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P3_RthA_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P3,GS_INI_KEY_RTHA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P3_RthB_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P3_RthB_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P3,GS_INI_KEY_RTHB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P3_VthA_0       :          BuffFloat = ((data2<<8) + data1);break;
	case P3_VthA_1       :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P3,GS_INI_KEY_VTHA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P3_VthB_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P3_VthB_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P3,GS_INI_KEY_VTHB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P3_TemReadA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P3_TemReadA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P3,GS_INI_KEY_TREADA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P3_TemReadB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P3_TemReadB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P3,GS_INI_KEY_TREADB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
									/*case P3_NTC_SN_0      :break;
									  case P3_NTC_SN_1      :break;
									  case P3_NTC_B_0       :break;
									  case P3_NTC_B_1       :break;
									  case P3_NTC_Rc_0      :break;
									  case P3_NTC_Rc_1      :break;
									  case P3_NTC_R0_0      :break;
									  case P3_NTC_R0_1      :break;
									  case P3_TempCalRaw_0	 :break;
									  case P3_TempCalRaw_1	 :break;
									 */
	case P3_PwrSetA_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P3_PwrSetA_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P3,GS_INI_KEY_PSETA,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P3_PwrSetB_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P3_PwrSetB_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P3,GS_INI_KEY_PSETB,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P3_PwrReadA_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P3_PwrReadA_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P3,GS_INI_KEY_PREADA,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P3_PwrReadB_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P3_PwrReadB_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P3,GS_INI_KEY_PREADB,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
								//case P3_Module_SN_0	 :break;
								//case P3_Module_SN_1	 :break;


								//case P4_ConfigFlag        :break;
	case P4_CurrXC           :  BUffInt = ((data2<<8) + data1);
								WritePrivateProfileInt(GS_INI_SECTION_P4,GS_INI_KEY_CURRXC,BUffInt,GS_INI_X_FILE);
								BUffInt = 0;
								break;
	case P4_TempXC           :  BUffInt = ((data2<<8) + data1);
								WritePrivateProfileInt(GS_INI_SECTION_P4,GS_INI_KEY_TEMPXC,BUffInt,GS_INI_X_FILE);
								BUffInt = 0;
								break;
	case P4_Current_0         : BuffFloat = ((data2<<8) + data1);break;
	case P4_Current_1         : BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P4,GS_INI_KEY_I,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P4_Temperature_0	 :  BuffFloat = ((data2<<8) + data1);break;
	case P4_Temperature_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P4,GS_INI_KEY_T,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P4_CurrentLimit_0	 :  BuffFloat = ((data2<<8) + data1);break;
	case P4_CurrentLimit_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P4,GS_INI_KEY_IL,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P4_Idelta_0         :  BuffFloat = ((data2<<8) + data1);break;
	case P4_Idelta_1         :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P4,GS_INI_KEY_I_DELTA,BuffFloat,GS_INI_HARD_FILE);
								BuffFloat = 0;
								break;
	case P4_Tdelta_0         :  BuffFloat = ((data2<<8) + data1);break;
	case P4_Tdelta_1         :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P4,GS_INI_KEY_T_DELTA,BuffFloat,GS_INI_HARD_FILE);
								BuffFloat = 0;
								break;
	case P4_CurrentControlEnable :  BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P4,GS_INI_KEY_CURRCTRLEN,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P4_TempControlEnable	 :  BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P4,GS_INI_KEY_TEMPCTRLEN,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P4_EnableKd              : BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P4,GS_INI_KEY_ENAKD,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P4_TimerInterval         : BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P4,GS_INI_KEY_INTERVAL,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P4_AdjustPeriod          : BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P4,GS_INI_KEY_ADJ,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P4_Kp_0         :          BuffFloat = ((data2<<8) + data1);break;
	case P4_Kp_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P4,GS_INI_KEY_KP,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case P4_Ki_0          :         BuffFloat = ((data2<<8) + data1);break;
	case P4_Ki_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P4,GS_INI_KEY_KI,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case P4_Kd_0          :         BuffFloat = ((data2<<8) + data1);break;
	case P4_Kd_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P4,GS_INI_KEY_KD,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case P4_RegAdj        :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P4,GS_INI_KEY_REGADJ,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P4_RegPumpI      :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P4,GS_INI_KEY_REGPMPI,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P4_TempADC      :          BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P4,GS_INI_KEY_TADC,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P4_CurrADC       :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P4,GS_INI_KEY_IADC,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P4_Decode        :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P4,GS_INI_KEY_HIGHDRV,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P4_OpenBit      :          BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P4,GS_INI_KEY_OPENBIT,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P4_TLBit         :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P4,GS_INI_KEY_TLBIT,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P4_CurSetA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P4_CurSetA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P4,GS_INI_KEY_ISETA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P4_CurSetB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P4_CurSetB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P4,GS_INI_KEY_ISETB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P4_CurReadA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P4_CurReadA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P4,GS_INI_KEY_IREADA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P4_CurReadB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P4_CurReadB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P4,GS_INI_KEY_IREADB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P4_RthA_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P4_RthA_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P4,GS_INI_KEY_RTHA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P4_RthB_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P4_RthB_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P4,GS_INI_KEY_RTHB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P4_VthA_0       :          BuffFloat = ((data2<<8) + data1);break;
	case P4_VthA_1       :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P4,GS_INI_KEY_VTHA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P4_VthB_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P4_VthB_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P4,GS_INI_KEY_VTHB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P4_TemReadA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P4_TemReadA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P4,GS_INI_KEY_TREADA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P4_TemReadB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P4_TemReadB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P4,GS_INI_KEY_TREADB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
									/*case P4_NTC_SN_0      :break;
									  case P4_NTC_SN_1      :break;
									  case P4_NTC_B_0       :break;
									  case P4_NTC_B_1       :break;
									  case P4_NTC_Rc_0      :break;
									  case P4_NTC_Rc_1      :break;
									  case P4_NTC_R0_0      :break;
									  case P4_NTC_R0_1      :break;
									  case P4_TempCalRaw_0	 :break;
									  case P4_TempCalRaw_1	 :break;
									 */
	case P4_PwrSetA_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P4_PwrSetA_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P4,GS_INI_KEY_PSETA,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P4_PwrSetB_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P4_PwrSetB_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P4,GS_INI_KEY_PSETB,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P4_PwrReadA_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P4_PwrReadA_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P4,GS_INI_KEY_PREADA,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P4_PwrReadB_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P4_PwrReadB_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P4,GS_INI_KEY_PREADB,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
								//case P4_Module_SN_0	 :break;
								//case P4_Module_SN_1	 :break;

								//case P5_ConfigFlag        :break;
	case P5_CurrXC           :  BUffInt = ((data2<<8) + data1);
								WritePrivateProfileInt(GS_INI_SECTION_P5,GS_INI_KEY_CURRXC,BUffInt,GS_INI_X_FILE);
								BUffInt = 0;
								break;
	case P5_TempXC           :  BUffInt = ((data2<<8) + data1);
								WritePrivateProfileInt(GS_INI_SECTION_P5,GS_INI_KEY_TEMPXC,BUffInt,GS_INI_X_FILE);
								BUffInt = 0;
								break;
	case P5_Current_0         : BuffFloat = ((data2<<8) + data1);break;
	case P5_Current_1         : BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P5,GS_INI_KEY_I,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P5_Temperature_0	 :  BuffFloat = ((data2<<8) + data1);break;
	case P5_Temperature_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P5,GS_INI_KEY_T,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P5_CurrentLimit_0	 :  BuffFloat = ((data2<<8) + data1);break;
	case P5_CurrentLimit_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P5,GS_INI_KEY_IL,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P5_Idelta_0         :  BuffFloat = ((data2<<8) + data1);break;
	case P5_Idelta_1         :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P5,GS_INI_KEY_I_DELTA,BuffFloat,GS_INI_HARD_FILE);
								BuffFloat = 0;
								break;
	case P5_Tdelta_0         :  BuffFloat = ((data2<<8) + data1);break;
	case P5_Tdelta_1         :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P5,GS_INI_KEY_T_DELTA,BuffFloat,GS_INI_HARD_FILE);
								BuffFloat = 0;
								break;
	case P5_CurrentControlEnable :  BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P5,GS_INI_KEY_CURRCTRLEN,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P5_TempControlEnable	 :  BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P5,GS_INI_KEY_TEMPCTRLEN,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P5_EnableKd              : BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P5,GS_INI_KEY_ENAKD,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P5_TimerInterval         : BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P5,GS_INI_KEY_INTERVAL,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P5_AdjustPeriod          : BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P5,GS_INI_KEY_ADJ,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P5_Kp_0         :          BuffFloat = ((data2<<8) + data1);break;
	case P5_Kp_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P5,GS_INI_KEY_KP,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case P5_Ki_0          :         BuffFloat = ((data2<<8) + data1);break;
	case P5_Ki_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P5,GS_INI_KEY_KI,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case P5_Kd_0          :         BuffFloat = ((data2<<8) + data1);break;
	case P5_Kd_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P5,GS_INI_KEY_KD,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case P5_RegAdj        :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P5,GS_INI_KEY_REGADJ,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P5_RegPumpI      :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P5,GS_INI_KEY_REGPMPI,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P5_TempADC      :          BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P5,GS_INI_KEY_TADC,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P5_CurrADC       :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P5,GS_INI_KEY_IADC,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P5_Decode        :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P5,GS_INI_KEY_HIGHDRV,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P5_OpenBit      :          BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P5,GS_INI_KEY_OPENBIT,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P5_TLBit         :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P5,GS_INI_KEY_TLBIT,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P5_CurSetA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P5_CurSetA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P5,GS_INI_KEY_ISETA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P5_CurSetB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P5_CurSetB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P5,GS_INI_KEY_ISETB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P5_CurReadA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P5_CurReadA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P5,GS_INI_KEY_IREADA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P5_CurReadB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P5_CurReadB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P5,GS_INI_KEY_IREADB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P5_RthA_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P5_RthA_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P5,GS_INI_KEY_RTHA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P5_RthB_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P5_RthB_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P5,GS_INI_KEY_RTHB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P5_VthA_0       :          BuffFloat = ((data2<<8) + data1);break;
	case P5_VthA_1       :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P5,GS_INI_KEY_VTHA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P5_VthB_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P5_VthB_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P5,GS_INI_KEY_VTHB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P5_TemReadA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P5_TemReadA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P5,GS_INI_KEY_TREADA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P5_TemReadB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P5_TemReadB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P5,GS_INI_KEY_TREADB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
									/*case P5_NTC_SN_0      :break;
									  case P5_NTC_SN_1      :break;
									  case P5_NTC_B_0       :break;
									  case P5_NTC_B_1       :break;
									  case P5_NTC_Rc_0      :break;
									  case P5_NTC_Rc_1      :break;
									  case P5_NTC_R0_0      :break;
									  case P5_NTC_R0_1      :break;
									  case P5_TempCalRaw_0	 :break;
									  case P5_TempCalRaw_1	 :break;
									 */
	case P5_PwrSetA_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P5_PwrSetA_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P5,GS_INI_KEY_PSETA,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P5_PwrSetB_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P5_PwrSetB_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P5,GS_INI_KEY_PSETB,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P5_PwrReadA_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P5_PwrReadA_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P5,GS_INI_KEY_PREADA,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P5_PwrReadB_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P5_PwrReadB_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P5,GS_INI_KEY_PREADB,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
								//case P5_Module_SN_0	 :break;
								//case P5_Module_SN_1	 :break;

								//case P6_ConfigFlag        :break;
	case P6_CurrXC           :  BUffInt = ((data2<<8) + data1);
								WritePrivateProfileInt(GS_INI_SECTION_P6,GS_INI_KEY_CURRXC,BUffInt,GS_INI_X_FILE);
								BUffInt = 0;
								break;
	case P6_TempXC           :  BUffInt = ((data2<<8) + data1);
								WritePrivateProfileInt(GS_INI_SECTION_P6,GS_INI_KEY_TEMPXC,BUffInt,GS_INI_X_FILE);
								BUffInt = 0;
								break;
	case P6_Current_0         : BuffFloat = ((data2<<8) + data1);break;
	case P6_Current_1         : BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P6,GS_INI_KEY_I,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P6_Temperature_0	 :  BuffFloat = ((data2<<8) + data1);break;
	case P6_Temperature_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P6,GS_INI_KEY_T,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P6_CurrentLimit_0	 :  BuffFloat = ((data2<<8) + data1);break;
	case P6_CurrentLimit_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P6,GS_INI_KEY_IL,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P6_Idelta_0         :  BuffFloat = ((data2<<8) + data1);break;
	case P6_Idelta_1         :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P6,GS_INI_KEY_I_DELTA,BuffFloat,GS_INI_HARD_FILE);
								BuffFloat = 0;
								break;
	case P6_Tdelta_0         :  BuffFloat = ((data2<<8) + data1);break;
	case P6_Tdelta_1         :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P6,GS_INI_KEY_T_DELTA,BuffFloat,GS_INI_HARD_FILE);
								BuffFloat = 0;
								break;
	case P6_CurrentControlEnable :  BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P6,GS_INI_KEY_CURRCTRLEN,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P6_TempControlEnable	 :  BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P6,GS_INI_KEY_TEMPCTRLEN,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P6_EnableKd              : BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P6,GS_INI_KEY_ENAKD,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P6_TimerInterval         : BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P6,GS_INI_KEY_INTERVAL,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P6_AdjustPeriod          : BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P6,GS_INI_KEY_ADJ,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P6_Kp_0         :          BuffFloat = ((data2<<8) + data1);break;
	case P6_Kp_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P6,GS_INI_KEY_KP,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case P6_Ki_0          :         BuffFloat = ((data2<<8) + data1);break;
	case P6_Ki_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P6,GS_INI_KEY_KI,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case P6_Kd_0          :         BuffFloat = ((data2<<8) + data1);break;
	case P6_Kd_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P6,GS_INI_KEY_KD,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case P6_RegAdj        :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P6,GS_INI_KEY_REGADJ,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P6_RegPumpI      :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P6,GS_INI_KEY_REGPMPI,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P6_TempADC      :          BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P6,GS_INI_KEY_TADC,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P6_CurrADC       :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P6,GS_INI_KEY_IADC,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P6_Decode        :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P6,GS_INI_KEY_HIGHDRV,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P6_OpenBit      :          BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P6,GS_INI_KEY_OPENBIT,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P6_TLBit         :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P6,GS_INI_KEY_TLBIT,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P6_CurSetA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P6_CurSetA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P6,GS_INI_KEY_ISETA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P6_CurSetB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P6_CurSetB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P6,GS_INI_KEY_ISETB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P6_CurReadA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P6_CurReadA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P6,GS_INI_KEY_IREADA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P6_CurReadB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P6_CurReadB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P6,GS_INI_KEY_IREADB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P6_RthA_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P6_RthA_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P6,GS_INI_KEY_RTHA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P6_RthB_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P6_RthB_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P6,GS_INI_KEY_RTHB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P6_VthA_0       :          BuffFloat = ((data2<<8) + data1);break;
	case P6_VthA_1       :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P6,GS_INI_KEY_VTHA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P6_VthB_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P6_VthB_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P6,GS_INI_KEY_VTHB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P6_TemReadA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P6_TemReadA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P6,GS_INI_KEY_TREADA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P6_TemReadB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P6_TemReadB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P6,GS_INI_KEY_TREADB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
									/*case P6_NTC_SN_0      :break;
									  case P6_NTC_SN_1      :break;
									  case P6_NTC_B_0       :break;
									  case P6_NTC_B_1       :break;
									  case P6_NTC_Rc_0      :break;
									  case P6_NTC_Rc_1      :break;
									  case P6_NTC_R0_0      :break;
									  case P6_NTC_R0_1      :break;
									  case P6_TempCalRaw_0	 :break;
									  case P6_TempCalRaw_1	 :break;
									 */
	case P6_PwrSetA_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P6_PwrSetA_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P6,GS_INI_KEY_PSETA,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P6_PwrSetB_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P6_PwrSetB_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P6,GS_INI_KEY_PSETB,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P6_PwrReadA_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P6_PwrReadA_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P6,GS_INI_KEY_PREADA,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P6_PwrReadB_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P6_PwrReadB_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P6,GS_INI_KEY_PREADB,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
								//case P6_Module_SN_0	 :break;
								//case P6dule_SN_1	 :break;

								//case P7_ConfigFlag        :break;
	case P7_CurrXC           :  BUffInt = ((data2<<8) + data1);
								WritePrivateProfileInt(GS_INI_SECTION_P7,GS_INI_KEY_CURRXC,BUffInt,GS_INI_X_FILE);
								BUffInt = 0;
								break;
	case P7_TempXC           :  BUffInt = ((data2<<8) + data1);
								WritePrivateProfileInt(GS_INI_SECTION_P7,GS_INI_KEY_TEMPXC,BUffInt,GS_INI_X_FILE);
								BUffInt = 0;
								break;
	case P7_Current_0         : BuffFloat = ((data2<<8) + data1);break;
	case P7_Current_1         : BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P7,GS_INI_KEY_I,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P7_Temperature_0	 :  BuffFloat = ((data2<<8) + data1);break;
	case P7_Temperature_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P7,GS_INI_KEY_T,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P7_CurrentLimit_0	 :  BuffFloat = ((data2<<8) + data1);break;
	case P7_CurrentLimit_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P7,GS_INI_KEY_IL,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P7_Idelta_0         :  BuffFloat = ((data2<<8) + data1);break;
	case P7_Idelta_1         :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P7,GS_INI_KEY_I_DELTA,BuffFloat,GS_INI_HARD_FILE);
								BuffFloat = 0;
								break;
	case P7_Tdelta_0         :  BuffFloat = ((data2<<8) + data1);break;
	case P7_Tdelta_1         :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P7,GS_INI_KEY_T_DELTA,BuffFloat,GS_INI_HARD_FILE);
								BuffFloat = 0;
								break;
	case P7_CurrentControlEnable :  BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P7,GS_INI_KEY_CURRCTRLEN,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P7_TempControlEnable	 :  BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P7,GS_INI_KEY_TEMPCTRLEN,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P7_EnableKd              : BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P7,GS_INI_KEY_ENAKD,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P7_TimerInterval         : BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P7,GS_INI_KEY_INTERVAL,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P7_AdjustPeriod          : BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P7,GS_INI_KEY_ADJ,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P7_Kp_0         :          BuffFloat = ((data2<<8) + data1);break;
	case P7_Kp_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P7,GS_INI_KEY_KP,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case P7_Ki_0          :         BuffFloat = ((data2<<8) + data1);break;
	case P7_Ki_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P7,GS_INI_KEY_KI,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case P7_Kd_0          :         BuffFloat = ((data2<<8) + data1);break;
	case P7_Kd_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P7,GS_INI_KEY_KD,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case P7_RegAdj        :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P7,GS_INI_KEY_REGADJ,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P7_RegPumpI      :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P7,GS_INI_KEY_REGPMPI,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P7_TempADC      :          BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P7,GS_INI_KEY_TADC,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P7_CurrADC       :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P7,GS_INI_KEY_IADC,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P7_Decode        :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P7,GS_INI_KEY_HIGHDRV,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P7_OpenBit      :          BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P7,GS_INI_KEY_OPENBIT,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P7_TLBit         :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P7,GS_INI_KEY_TLBIT,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P7_CurSetA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P7_CurSetA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P7,GS_INI_KEY_ISETA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P7_CurSetB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P7_CurSetB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P7,GS_INI_KEY_ISETB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P7_CurReadA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P7_CurReadA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P7,GS_INI_KEY_IREADA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P7_CurReadB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P7_CurReadB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P7,GS_INI_KEY_IREADB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P7_RthA_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P7_RthA_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P7,GS_INI_KEY_RTHA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P7_RthB_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P7_RthB_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P7,GS_INI_KEY_RTHB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P7_VthA_0       :          BuffFloat = ((data2<<8) + data1);break;
	case P7_VthA_1       :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P7,GS_INI_KEY_VTHA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P7_VthB_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P7_VthB_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P7,GS_INI_KEY_VTHB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P7_TemReadA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P7_TemReadA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P7,GS_INI_KEY_TREADA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P7_TemReadB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P7_TemReadB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P7,GS_INI_KEY_TREADB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
									/*case P7_NTC_SN_0      :break;
									  case P7_NTC_SN_1      :break;
									  case P7_NTC_B_0       :break;
									  case P7_NTC_B_1       :break;
									  case P7_NTC_Rc_0      :break;
									  case P7_NTC_Rc_1      :break;
									  case P7_NTC_R0_0      :break;
									  case P7_NTC_R0_1      :break;
									  case P7_TempCalRaw_0	 :break;
									  case P7_TempCalRaw_1	 :break;
									 */
	case P7_PwrSetA_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P7_PwrSetA_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P3,GS_INI_KEY_PSETA,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P7_PwrSetB_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P7_PwrSetB_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P7,GS_INI_KEY_PSETB,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P7_PwrReadA_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P7_PwrReadA_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P7,GS_INI_KEY_PREADA,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P7_PwrReadB_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P7_PwrReadB_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P7,GS_INI_KEY_PREADB,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
								//case P7_Module_SN_0	 :break;
								//case P7_Module_SN_1	 :break;

								//case P8_ConfigFlag        :break;
	case P8_CurrXC           :  BUffInt = ((data2<<8) + data1);
								WritePrivateProfileInt(GS_INI_SECTION_P8,GS_INI_KEY_CURRXC,BUffInt,GS_INI_X_FILE);
								BUffInt = 0;
								break;
	case P8_TempXC           :  BUffInt = ((data2<<8) + data1);
								WritePrivateProfileInt(GS_INI_SECTION_P8,GS_INI_KEY_TEMPXC,BUffInt,GS_INI_X_FILE);
								BUffInt = 0;
								break;
	case P8_Current_0         : BuffFloat = ((data2<<8) + data1);break;
	case P8_Current_1         : BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P8,GS_INI_KEY_I,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P8_Temperature_0	 :  BuffFloat = ((data2<<8) + data1);break;
	case P8_Temperature_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P8,GS_INI_KEY_T,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P8_CurrentLimit_0	 :  BuffFloat = ((data2<<8) + data1);break;
	case P8_CurrentLimit_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P8,GS_INI_KEY_IL,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P8_Idelta_0         :  BuffFloat = ((data2<<8) + data1);break;
	case P8_Idelta_1         :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P8,GS_INI_KEY_I_DELTA,BuffFloat,GS_INI_HARD_FILE);
								BuffFloat = 0;
								break;
	case P8_Tdelta_0         :  BuffFloat = ((data2<<8) + data1);break;
	case P8_Tdelta_1         :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P8,GS_INI_KEY_T_DELTA,BuffFloat,GS_INI_HARD_FILE);
								BuffFloat = 0;
								break;
	case P8_CurrentControlEnable :  BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P8,GS_INI_KEY_CURRCTRLEN,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P8_TempControlEnable	 :  BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P8,GS_INI_KEY_TEMPCTRLEN,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P8_EnableKd              : BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P8,GS_INI_KEY_ENAKD,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P8_TimerInterval         : BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P8,GS_INI_KEY_INTERVAL,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P8_AdjustPeriod          : BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P8,GS_INI_KEY_ADJ,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P8_Kp_0         :          BuffFloat = ((data2<<8) + data1);break;
	case P8_Kp_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P8,GS_INI_KEY_KP,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case P8_Ki_0          :         BuffFloat = ((data2<<8) + data1);break;
	case P8_Ki_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P8,GS_INI_KEY_KI,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case P8_Kd_0          :         BuffFloat = ((data2<<8) + data1);break;
	case P8_Kd_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P8,GS_INI_KEY_KD,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case P8_RegAdj        :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P8,GS_INI_KEY_REGADJ,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P8_RegPumpI      :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P8,GS_INI_KEY_REGPMPI,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P8_TempADC      :          BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P8,GS_INI_KEY_TADC,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P8_CurrADC       :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P8,GS_INI_KEY_IADC,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P8_Decode        :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P8,GS_INI_KEY_HIGHDRV,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P8_OpenBit      :          BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P8,GS_INI_KEY_OPENBIT,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P8_TLBit         :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P8,GS_INI_KEY_TLBIT,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P8_CurSetA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P8_CurSetA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P8,GS_INI_KEY_ISETA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P8_CurSetB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P8_CurSetB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P8,GS_INI_KEY_ISETB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P8_CurReadA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P8_CurReadA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P8,GS_INI_KEY_IREADA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P8_CurReadB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P8_CurReadB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P8,GS_INI_KEY_IREADB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P8_RthA_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P8_RthA_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P8,GS_INI_KEY_RTHA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P8_RthB_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P8_RthB_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P8,GS_INI_KEY_RTHB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P8_VthA_0       :          BuffFloat = ((data2<<8) + data1);break;
	case P8_VthA_1       :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P8,GS_INI_KEY_VTHA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P8_VthB_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P8_VthB_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P8,GS_INI_KEY_VTHB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P8_TemReadA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P8_TemReadA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P8,GS_INI_KEY_TREADA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P8_TemReadB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P8_TemReadB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P8,GS_INI_KEY_TREADB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
									/*case P8_NTC_SN_0      :break;
									  case P8_NTC_SN_1      :break;
									  case P8_NTC_B_0       :break;
									  case P8_NTC_B_1       :break;
									  case P8_NTC_Rc_0      :break;
									  case P8_NTC_Rc_1      :break;
									  case P8_NTC_R0_0      :break;
									  case P8_NTC_R0_1      :break;
									  case P8_TempCalRaw_0	 :break;
									  case P8_TempCalRaw_1	 :break;
									 */
	case P8_PwrSetA_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P8_PwrSetA_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P8,GS_INI_KEY_PSETA,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P8_PwrSetB_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P8_PwrSetB_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P8,GS_INI_KEY_PSETB,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P8_PwrReadA_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P8_PwrReadA_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P8,GS_INI_KEY_PREADA,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P8_PwrReadB_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P8_PwrReadB_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P8,GS_INI_KEY_PREADB,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
								//case P8_Module_SN_0	 :break;
								//case P8_Module_SN_1	 :break;
								//case P9_ConfigFlag        :break;
	case P9_CurrXC           :  BUffInt = ((data2<<8) + data1);
								WritePrivateProfileInt(GS_INI_SECTION_P9,GS_INI_KEY_CURRXC,BUffInt,GS_INI_X_FILE);
								BUffInt = 0;
								break;
	case P9_TempXC           :  BUffInt = ((data2<<8) + data1);
								WritePrivateProfileInt(GS_INI_SECTION_P9,GS_INI_KEY_TEMPXC,BUffInt,GS_INI_X_FILE);
								BUffInt = 0;
								break;
	case P9_Current_0         : BuffFloat = ((data2<<8) + data1);break;
	case P9_Current_1         : BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P9,GS_INI_KEY_I,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P9_Temperature_0	 :  BuffFloat = ((data2<<8) + data1);break;
	case P9_Temperature_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P9,GS_INI_KEY_T,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P9_CurrentLimit_0	 :  BuffFloat = ((data2<<8) + data1);break;
	case P9_CurrentLimit_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P9,GS_INI_KEY_IL,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P9_Idelta_0         :  BuffFloat = ((data2<<8) + data1);break;
	case P9_Idelta_1         :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P9,GS_INI_KEY_I_DELTA,BuffFloat,GS_INI_HARD_FILE);
								BuffFloat = 0;
								break;
	case P9_Tdelta_0         :  BuffFloat = ((data2<<8) + data1);break;
	case P9_Tdelta_1         :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P9,GS_INI_KEY_T_DELTA,BuffFloat,GS_INI_HARD_FILE);
								BuffFloat = 0;
								break;
	case P9_CurrentControlEnable :  BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P9,GS_INI_KEY_CURRCTRLEN,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P9_TempControlEnable	 :  BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P9,GS_INI_KEY_TEMPCTRLEN,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P9_EnableKd              : BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P9,GS_INI_KEY_ENAKD,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P9_TimerInterval         : BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P9,GS_INI_KEY_INTERVAL,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P9_AdjustPeriod          : BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P9,GS_INI_KEY_ADJ,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P9_Kp_0         :          BuffFloat = ((data2<<8) + data1);break;
	case P9_Kp_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P9,GS_INI_KEY_KP,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case P9_Ki_0          :         BuffFloat = ((data2<<8) + data1);break;
	case P9_Ki_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P9,GS_INI_KEY_KI,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case P9_Kd_0          :         BuffFloat = ((data2<<8) + data1);break;
	case P9_Kd_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P9,GS_INI_KEY_KD,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case P9_RegAdj        :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P9,GS_INI_KEY_REGADJ,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P9_RegPumpI      :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P9,GS_INI_KEY_REGPMPI,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P9_TempADC      :          BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P9,GS_INI_KEY_TADC,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P9_CurrADC       :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P9,GS_INI_KEY_IADC,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P9_Decode        :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P9,GS_INI_KEY_HIGHDRV,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P9_OpenBit      :          BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P9,GS_INI_KEY_OPENBIT,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P9_TLBit         :         BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P9,GS_INI_KEY_TLBIT,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P9_CurSetA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P9_CurSetA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P9,GS_INI_KEY_ISETA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P9_CurSetB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P9_CurSetB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P9,GS_INI_KEY_ISETB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P9_CurReadA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P9_CurReadA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P9,GS_INI_KEY_IREADA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P9_CurReadB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P9_CurReadB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P9,GS_INI_KEY_IREADB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P9_RthA_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P9_RthA_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P9,GS_INI_KEY_RTHA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P9_RthB_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P9_RthB_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P9,GS_INI_KEY_RTHB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P9_VthA_0       :          BuffFloat = ((data2<<8) + data1);break;
	case P9_VthA_1       :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P9,GS_INI_KEY_VTHA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P9_VthB_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P9_VthB_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P9,GS_INI_KEY_VTHB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P9_TemReadA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P9_TemReadA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P9,GS_INI_KEY_TREADA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P9_TemReadB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P9_TemReadB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P9,GS_INI_KEY_TREADB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
									/*case P9_NTC_SN_0      :break;
									  case P9_NTC_SN_1      :break;
									  case P9_NTC_B_0       :break;
									  case P9_NTC_B_1       :break;
									  case P9_NTC_Rc_0      :break;
									  case P9_NTC_Rc_1      :break;
									  case P9_NTC_R0_0      :break;
									  case P9_NTC_R0_1      :break;
									  case P9_TempCalRaw_0	 :break;
									  case P9_TempCalRaw_1	 :break;
									 */
	case P9_PwrSetA_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P9_PwrSetA_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P9,GS_INI_KEY_PSETA,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P9_PwrSetB_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P9_PwrSetB_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P9,GS_INI_KEY_PSETB,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P9_PwrReadA_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P9_PwrReadA_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P9,GS_INI_KEY_PREADA,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P9_PwrReadB_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P9_PwrReadB_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P9,GS_INI_KEY_PREADB,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
								//case P9_Module_SN_0	 :break;
								//case P9_Module_SN_1	 :break;
								//case P10_ConfigFlag        :break;
	case P10_CurrXC           :  BUffInt = ((data2<<8) + data1);
								 WritePrivateProfileInt(GS_INI_SECTION_P10,GS_INI_KEY_CURRXC,BUffInt,GS_INI_X_FILE);
								 BUffInt = 0;
								 break;
	case P10_TempXC           :  BUffInt = ((data2<<8) + data1);
								 WritePrivateProfileInt(GS_INI_SECTION_P10,GS_INI_KEY_TEMPXC,BUffInt,GS_INI_X_FILE);
								 BUffInt = 0;
								 break;
	case P10_Current_0         : BuffFloat = ((data2<<8) + data1);break;
	case P10_Current_1         : BuffFloat += ((data2<<24) + (data1<<16));
								 WritePrivateProfileDouble(GS_INI_SECTION_P10,GS_INI_KEY_I,BuffFloat,GS_INI_FILE);
								 BuffFloat = 0;
								 break;
	case P10_Temperature_0	 :  BuffFloat = ((data2<<8) + data1);break;
	case P10_Temperature_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P10,GS_INI_KEY_T,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P10_CurrentLimit_0	 :  BuffFloat = ((data2<<8) + data1);break;
	case P10_CurrentLimit_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P10,GS_INI_KEY_IL,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P10_Idelta_0         :  BuffFloat = ((data2<<8) + data1);break;
	case P10_Idelta_1         :  BuffFloat += ((data2<<24) + (data1<<16));
								 WritePrivateProfileDouble(GS_INI_SECTION_P10,GS_INI_KEY_I_DELTA,BuffFloat,GS_INI_HARD_FILE);
								 BuffFloat = 0;
								 break;
	case P10_Tdelta_0         :  BuffFloat = ((data2<<8) + data1);break;
	case P10_Tdelta_1         :  BuffFloat += ((data2<<24) + (data1<<16));
								 WritePrivateProfileDouble(GS_INI_SECTION_P10,GS_INI_KEY_T_DELTA,BuffFloat,GS_INI_HARD_FILE);
								 BuffFloat = 0;
								 break;
	case P10_CurrentControlEnable :  BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P10,GS_INI_KEY_CURRCTRLEN,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P10_TempControlEnable	 :  BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P10,GS_INI_KEY_TEMPCTRLEN,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P10_EnableKd              : BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P10,GS_INI_KEY_ENAKD,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P10_TimerInterval         : BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P10,GS_INI_KEY_INTERVAL,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P10_AdjustPeriod          : BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P10,GS_INI_KEY_ADJ,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P10_Kp_0         :          BuffFloat = ((data2<<8) + data1);break;
	case P10_Kp_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									 WritePrivateProfileDouble(GS_INI_SECTION_P10,GS_INI_KEY_KP,BuffFloat,GS_INI_HARD_FILE);
									 BuffFloat = 0;
									 break;
	case P10_Ki_0          :         BuffFloat = ((data2<<8) + data1);break;
	case P10_Ki_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									 WritePrivateProfileDouble(GS_INI_SECTION_P10,GS_INI_KEY_KI,BuffFloat,GS_INI_HARD_FILE);
									 BuffFloat = 0;
									 break;
	case P10_Kd_0          :         BuffFloat = ((data2<<8) + data1);break;
	case P10_Kd_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									 WritePrivateProfileDouble(GS_INI_SECTION_P10,GS_INI_KEY_KD,BuffFloat,GS_INI_HARD_FILE);
									 BuffFloat = 0;
									 break;
	case P10_RegAdj        :         BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P10,GS_INI_KEY_REGADJ,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P10_RegPumpI      :         BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P10,GS_INI_KEY_REGPMPI,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P10_TempADC      :          BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P10,GS_INI_KEY_TADC,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P10_CurrADC       :         BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P10,GS_INI_KEY_IADC,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P10_Decode        :         BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P10,GS_INI_KEY_HIGHDRV,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P10_OpenBit      :          BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P10,GS_INI_KEY_OPENBIT,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P10_TLBit         :         BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P10,GS_INI_KEY_TLBIT,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P10_CurSetA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P10_CurSetA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P10,GS_INI_KEY_ISETA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P10_CurSetB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P10_CurSetB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P10,GS_INI_KEY_ISETB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P10_CurReadA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P10_CurReadA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P10,GS_INI_KEY_IREADA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P10_CurReadB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P10_CurReadB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P10,GS_INI_KEY_IREADB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P10_RthA_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P10_RthA_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									 WritePrivateProfileDouble(GS_INI_SECTION_P10,GS_INI_KEY_RTHA,BuffFloat,GS_INI_CALI_FILE);
									 BuffFloat = 0;
									 break;
	case P10_RthB_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P10_RthB_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									 WritePrivateProfileDouble(GS_INI_SECTION_P10,GS_INI_KEY_RTHB,BuffFloat,GS_INI_CALI_FILE);
									 BuffFloat = 0;
									 break;
	case P10_VthA_0       :          BuffFloat = ((data2<<8) + data1);break;
	case P10_VthA_1       :          BuffFloat += ((data2<<24) + (data1<<16));
									 WritePrivateProfileDouble(GS_INI_SECTION_P10,GS_INI_KEY_VTHA,BuffFloat,GS_INI_CALI_FILE);
									 BuffFloat = 0;
									 break;
	case P10_VthB_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P10_VthB_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									 WritePrivateProfileDouble(GS_INI_SECTION_P10,GS_INI_KEY_VTHB,BuffFloat,GS_INI_CALI_FILE);
									 BuffFloat = 0;
									 break;
	case P10_TemReadA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P10_TemReadA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P10,GS_INI_KEY_TREADA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P10_TemReadB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P10_TemReadB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P10,GS_INI_KEY_TREADB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
									/*case P10_NTC_SN_0      :break;
									  case P10_NTC_SN_1      :break;
									  case P10_NTC_B_0       :break;
									  case P10_NTC_B_1       :break;
									  case P10_NTC_Rc_0      :break;
									  case P10_NTC_Rc_1      :break;
									  case P10_NTC_R0_0      :break;
									  case P10_NTC_R0_1      :break;
									  case P10_TempCalRaw_0	 :break;
									  case P10_TempCalRaw_1	 :break;
									 */
	case P10_PwrSetA_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P10_PwrSetA_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P10,GS_INI_KEY_PSETA,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P10_PwrSetB_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P10_PwrSetB_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P10,GS_INI_KEY_PSETB,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P10_PwrReadA_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P10_PwrReadA_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P10,GS_INI_KEY_PREADA,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P10_PwrReadB_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P10_PwrReadB_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P10,GS_INI_KEY_PREADB,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
								//case P10_Module_SN_0	 :break;
								//case P10_Module_SN_1	 :break;
								//case P11_ConfigFlag        :break;
	case P11_CurrXC           :  BUffInt = ((data2<<8) + data1);
								 WritePrivateProfileInt(GS_INI_SECTION_P11,GS_INI_KEY_CURRXC,BUffInt,GS_INI_X_FILE);
								 BUffInt = 0;
								 break;
	case P11_TempXC           :  BUffInt = ((data2<<8) + data1);
								 WritePrivateProfileInt(GS_INI_SECTION_P11,GS_INI_KEY_TEMPXC,BUffInt,GS_INI_X_FILE);
								 BUffInt = 0;
								 break;
	case P11_Current_0         : BuffFloat = ((data2<<8) + data1);break;
	case P11_Current_1         : BuffFloat += ((data2<<24) + (data1<<16));
								 WritePrivateProfileDouble(GS_INI_SECTION_P11,GS_INI_KEY_I,BuffFloat,GS_INI_FILE);
								 BuffFloat = 0;
								 break;
	case P11_Temperature_0	 :  BuffFloat = ((data2<<8) + data1);break;
	case P11_Temperature_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P11,GS_INI_KEY_T,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P11_CurrentLimit_0	 :  BuffFloat = ((data2<<8) + data1);break;
	case P11_CurrentLimit_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P11,GS_INI_KEY_IL,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P11_Idelta_0         :  BuffFloat = ((data2<<8) + data1);break;
	case P11_Idelta_1         :  BuffFloat += ((data2<<24) + (data1<<16));
								 WritePrivateProfileDouble(GS_INI_SECTION_P11,GS_INI_KEY_I_DELTA,BuffFloat,GS_INI_HARD_FILE);
								 BuffFloat = 0;
								 break;
	case P11_Tdelta_0         :  BuffFloat = ((data2<<8) + data1);break;
	case P11_Tdelta_1         :  BuffFloat += ((data2<<24) + (data1<<16));
								 WritePrivateProfileDouble(GS_INI_SECTION_P11,GS_INI_KEY_T_DELTA,BuffFloat,GS_INI_HARD_FILE);
								 BuffFloat = 0;
								 break;
	case P11_CurrentControlEnable :  BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P11,GS_INI_KEY_CURRCTRLEN,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P11_TempControlEnable	 :  BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P11,GS_INI_KEY_TEMPCTRLEN,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P11_EnableKd              : BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P11,GS_INI_KEY_ENAKD,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P11_TimerInterval         : BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P11,GS_INI_KEY_INTERVAL,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P11_AdjustPeriod          : BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P11,GS_INI_KEY_ADJ,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P11_Kp_0         :          BuffFloat = ((data2<<8) + data1);break;
	case P11_Kp_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									 WritePrivateProfileDouble(GS_INI_SECTION_P11,GS_INI_KEY_KP,BuffFloat,GS_INI_HARD_FILE);
									 BuffFloat = 0;
									 break;
	case P11_Ki_0          :         BuffFloat = ((data2<<8) + data1);break;
	case P11_Ki_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									 WritePrivateProfileDouble(GS_INI_SECTION_P11,GS_INI_KEY_KI,BuffFloat,GS_INI_HARD_FILE);
									 BuffFloat = 0;
									 break;
	case P11_Kd_0          :         BuffFloat = ((data2<<8) + data1);break;
	case P11_Kd_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									 WritePrivateProfileDouble(GS_INI_SECTION_P11,GS_INI_KEY_KD,BuffFloat,GS_INI_HARD_FILE);
									 BuffFloat = 0;
									 break;
	case P11_RegAdj        :         BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P11,GS_INI_KEY_REGADJ,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P11_RegPumpI      :         BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P11,GS_INI_KEY_REGPMPI,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P11_TempADC      :          BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P11,GS_INI_KEY_TADC,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P11_CurrADC       :         BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P11,GS_INI_KEY_IADC,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P11_Decode        :         BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P11,GS_INI_KEY_HIGHDRV,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P11_OpenBit      :          BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P11,GS_INI_KEY_OPENBIT,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P11_TLBit         :         BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P11,GS_INI_KEY_TLBIT,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P11_CurSetA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P11_CurSetA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P11,GS_INI_KEY_ISETA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P11_CurSetB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P11_CurSetB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P11,GS_INI_KEY_ISETB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P11_CurReadA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P11_CurReadA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P11,GS_INI_KEY_IREADA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P11_CurReadB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P11_CurReadB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P11,GS_INI_KEY_IREADB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P11_RthA_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P11_RthA_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									 WritePrivateProfileDouble(GS_INI_SECTION_P11,GS_INI_KEY_RTHA,BuffFloat,GS_INI_CALI_FILE);
									 BuffFloat = 0;
									 break;
	case P11_RthB_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P11_RthB_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									 WritePrivateProfileDouble(GS_INI_SECTION_P11,GS_INI_KEY_RTHB,BuffFloat,GS_INI_CALI_FILE);
									 BuffFloat = 0;
									 break;
	case P11_VthA_0       :          BuffFloat = ((data2<<8) + data1);break;
	case P11_VthA_1       :          BuffFloat += ((data2<<24) + (data1<<16));
									 WritePrivateProfileDouble(GS_INI_SECTION_P11,GS_INI_KEY_VTHA,BuffFloat,GS_INI_CALI_FILE);
									 BuffFloat = 0;
									 break;
	case P11_VthB_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P11_VthB_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									 WritePrivateProfileDouble(GS_INI_SECTION_P11,GS_INI_KEY_VTHB,BuffFloat,GS_INI_CALI_FILE);
									 BuffFloat = 0;
									 break;
	case P11_TemReadA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P11_TemReadA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P11,GS_INI_KEY_TREADA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P11_TemReadB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P11_TemReadB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P11,GS_INI_KEY_TREADB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
									/*case P11_NTC_SN_0      :break;
									  case P11_NTC_SN_1      :break;
									  case P11_NTC_B_0       :break;
									  case P11_NTC_B_1       :break;
									  case P11_NTC_Rc_0      :break;
									  case P11_NTC_Rc_1      :break;
									  case P11_NTC_R0_0      :break;
									  case P11_NTC_R0_1      :break;
									  case P11_TempCalRaw_0	 :break;
									  case P11_TempCalRaw_1	 :break;
									 */
	case P11_PwrSetA_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P11_PwrSetA_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P11,GS_INI_KEY_PSETA,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P11_PwrSetB_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P11_PwrSetB_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P11,GS_INI_KEY_PSETB,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P11_PwrReadA_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P11_PwrReadA_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P11,GS_INI_KEY_PREADA,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P11_PwrReadB_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P11_PwrReadB_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P11,GS_INI_KEY_PREADB,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
								//case P11_Module_SN_0	 :break;
								//case P11_Module_SN_1	 :break;
								//case P12_ConfigFlag        :break;
	case P12_CurrXC           :  BUffInt = ((data2<<8) + data1);
								 WritePrivateProfileInt(GS_INI_SECTION_P12,GS_INI_KEY_CURRXC,BUffInt,GS_INI_X_FILE);
								 BUffInt = 0;
								 break;
	case P12_TempXC           :  BUffInt = ((data2<<8) + data1);
								 WritePrivateProfileInt(GS_INI_SECTION_P12,GS_INI_KEY_TEMPXC,BUffInt,GS_INI_X_FILE);
								 BUffInt = 0;
								 break;
	case P12_Current_0         : BuffFloat = ((data2<<8) + data1);break;
	case P12_Current_1         : BuffFloat += ((data2<<24) + (data1<<16));
								 WritePrivateProfileDouble(GS_INI_SECTION_P12,GS_INI_KEY_I,BuffFloat,GS_INI_FILE);
								 BuffFloat = 0;
								 break;
	case P12_Temperature_0	 :  BuffFloat = ((data2<<8) + data1);break;
	case P12_Temperature_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P12,GS_INI_KEY_T,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P12_CurrentLimit_0	 :  BuffFloat = ((data2<<8) + data1);break;
	case P12_CurrentLimit_1	 :  BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P12,GS_INI_KEY_IL,BuffFloat,GS_INI_FILE);
								BuffFloat = 0;
								break;
	case P12_Idelta_0         :  BuffFloat = ((data2<<8) + data1);break;
	case P12_Idelta_1         :  BuffFloat += ((data2<<24) + (data1<<16));
								 WritePrivateProfileDouble(GS_INI_SECTION_P12,GS_INI_KEY_I_DELTA,BuffFloat,GS_INI_HARD_FILE);
								 BuffFloat = 0;
								 break;
	case P12_Tdelta_0         :  BuffFloat = ((data2<<8) + data1);break;
	case P12_Tdelta_1         :  BuffFloat += ((data2<<24) + (data1<<16));
								 WritePrivateProfileDouble(GS_INI_SECTION_P12,GS_INI_KEY_T_DELTA,BuffFloat,GS_INI_HARD_FILE);
								 BuffFloat = 0;
								 break;
	case P12_CurrentControlEnable :  BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P12,GS_INI_KEY_CURRCTRLEN,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P12_TempControlEnable	 :  BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_P12,GS_INI_KEY_TEMPCTRLEN,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case P12_EnableKd              : BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P12,GS_INI_KEY_ENAKD,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P12_TimerInterval         : BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P12,GS_INI_KEY_INTERVAL,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P12_AdjustPeriod          : BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P12,GS_INI_KEY_ADJ,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P12_Kp_0         :          BuffFloat = ((data2<<8) + data1);break;
	case P12_Kp_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									 WritePrivateProfileDouble(GS_INI_SECTION_P12,GS_INI_KEY_KP,BuffFloat,GS_INI_HARD_FILE);
									 BuffFloat = 0;
									 break;
	case P12_Ki_0          :         BuffFloat = ((data2<<8) + data1);break;
	case P12_Ki_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									 WritePrivateProfileDouble(GS_INI_SECTION_P12,GS_INI_KEY_KI,BuffFloat,GS_INI_HARD_FILE);
									 BuffFloat = 0;
									 break;
	case P12_Kd_0          :         BuffFloat = ((data2<<8) + data1);break;
	case P12_Kd_1          :         BuffFloat += ((data2<<24) + (data1<<16));
									 WritePrivateProfileDouble(GS_INI_SECTION_P12,GS_INI_KEY_KD,BuffFloat,GS_INI_HARD_FILE);
									 BuffFloat = 0;
									 break;
	case P12_RegAdj        :         BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P12,GS_INI_KEY_REGADJ,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P12_RegPumpI      :         BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P12,GS_INI_KEY_REGPMPI,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P12_TempADC      :          BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P12,GS_INI_KEY_TADC,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P12_CurrADC       :         BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P12,GS_INI_KEY_IADC,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P12_Decode        :         BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P12,GS_INI_KEY_HIGHDRV,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P12_OpenBit      :          BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P12,GS_INI_KEY_OPENBIT,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P12_TLBit         :         BUffInt = ((data2<<8) + data1);
									 WritePrivateProfileInt(GS_INI_SECTION_P12,GS_INI_KEY_TLBIT,BUffInt,GS_INI_HARD_FILE);
									 BUffInt = 0;
									 break;
	case P12_CurSetA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P12_CurSetA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P12,GS_INI_KEY_ISETA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P12_CurSetB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P12_CurSetB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P12,GS_INI_KEY_ISETB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P12_CurReadA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P12_CurReadA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P12,GS_INI_KEY_IREADA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P12_CurReadB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P12_CurReadB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P12,GS_INI_KEY_IREADB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P12_RthA_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P12_RthA_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									 WritePrivateProfileDouble(GS_INI_SECTION_P12,GS_INI_KEY_RTHA,BuffFloat,GS_INI_CALI_FILE);
									 BuffFloat = 0;
									 break;
	case P12_RthB_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P12_RthB_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									 WritePrivateProfileDouble(GS_INI_SECTION_P12,GS_INI_KEY_RTHB,BuffFloat,GS_INI_CALI_FILE);
									 BuffFloat = 0;
									 break;
	case P12_VthA_0       :          BuffFloat = ((data2<<8) + data1);break;
	case P12_VthA_1       :          BuffFloat += ((data2<<24) + (data1<<16));
									 WritePrivateProfileDouble(GS_INI_SECTION_P12,GS_INI_KEY_VTHA,BuffFloat,GS_INI_CALI_FILE);
									 BuffFloat = 0;
									 break;
	case P12_VthB_0        :         BuffFloat = ((data2<<8) + data1);break;
	case P12_VthB_1        :         BuffFloat += ((data2<<24) + (data1<<16));
									 WritePrivateProfileDouble(GS_INI_SECTION_P12,GS_INI_KEY_VTHB,BuffFloat,GS_INI_CALI_FILE);
									 BuffFloat = 0;
									 break;
	case P12_TemReadA_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P12_TemReadA_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P12,GS_INI_KEY_TREADA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case P12_TemReadB_0	 :          BuffFloat = ((data2<<8) + data1);break;
	case P12_TemReadB_1	 :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_P12,GS_INI_KEY_TREADB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
									/*case P12_NTC_SN_0      :break;
									  case P12_NTC_SN_1      :break;
									  case P12_NTC_B_0       :break;
									  case P12_NTC_B_1       :break;
									  case P12_NTC_Rc_0      :break;
									  case P12_NTC_Rc_1      :break;
									  case P12_NTC_R0_0      :break;
									  case P12_NTC_R0_1      :break;
									  case P12_TempCalRaw_0	 :break;
									  case P12_TempCalRaw_1	 :break;
									 */
	case P12_PwrSetA_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P12_PwrSetA_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P12,GS_INI_KEY_PSETA,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P12_PwrSetB_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P12_PwrSetB_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P12,GS_INI_KEY_PSETB,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P12_PwrReadA_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P12_PwrReadA_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P12,GS_INI_KEY_PREADA,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
	case P12_PwrReadB_0	 :      BuffFloat = ((data2<<8) + data1);break;
	case P12_PwrReadB_1	 :      BuffFloat += ((data2<<24) + (data1<<16));
								WritePrivateProfileDouble(GS_INI_SECTION_P12,GS_INI_KEY_PREADB,BuffFloat,GS_INI_CALI_FILE);
								BuffFloat = 0;
								break;
								//case P12_Module_SN_0	 :break;
								//case P12_Module_SN_1	 :break;
								//case T0_ConfigFlag           :break; BuffFloat = ((data2<<8) + data1);break;
	case T0_TempXC               :  BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T0,GS_INI_KEY_TEMPXC,BUffInt,GS_INI_CALI_FILE);
									BUffInt = 0;
									break;

	case T0_Temperature_0        :  BuffFloat = ((data2<<8) + data1);break;
	case T0_Temperature_1        :  BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T0,GS_INI_KEY_T,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case T0_Tdelta_0            :   BuffFloat = ((data2<<8) + data1);break;
	case T0_Tdelta_1            :   BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T0,GS_INI_KEY_T_DELTA,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case T0_TempControlEnable	:   BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T0,GS_INI_KEY_TEMPCTRLEN,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T0_EnableKd             :  BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T0,GS_INI_KEY_ENAKD,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T0_TimerInterval       :   BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T0,GS_INI_KEY_INTERVAL,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T0_AdjustPeriod	:       BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T0,GS_INI_KEY_ADJ,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T0_Kp_0         :          BuffFloat = ((data2<<8) + data1);break;
	case T0_Kp_1        :           BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T0,GS_INI_KEY_KP,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case T0_Ki_0         :          BuffFloat = ((data2<<8) + data1);break;
	case T0_Ki_1         :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T0,GS_INI_KEY_KI,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case T0_Kd_0         :          BuffFloat = ((data2<<8) + data1);break;
	case T0_Kd_1         :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T0,GS_INI_KEY_KD,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case T0_RegAdj       :          BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T0,GS_INI_KEY_REGADJ,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T0_TempADC      :          BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T0,GS_INI_KEY_TADC,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T0_TLBit       :           BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T0,GS_INI_KEY_TLBIT,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T0_RthA_0       :          BuffFloat = ((data2<<8) + data1);break;
	case T0_RthA_1       :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T0,GS_INI_KEY_RTHA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case T0_RthB_0       :          BuffFloat = ((data2<<8) + data1);break;
	case T0_RthB_1       :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T0,GS_INI_KEY_RTHB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case T0_VthA_0      :           BuffFloat = ((data2<<8) + data1);break;
	case T0_VthA_1       :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T0,GS_INI_KEY_VTHA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case T0_VthB_0       :          BuffFloat = ((data2<<8) + data1);break;
	case T0_VthB_1       :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T0,GS_INI_KEY_VTHB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case T0_TemReadA_0	:           BuffFloat = ((data2<<8) + data1);break;
	case T0_TemReadA_1	:           BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T0,GS_INI_KEY_TREADA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case T0_TemReadB_0	:           BuffFloat = ((data2<<8) + data1);break;
	case T0_TemReadB_1	:           BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T0,GS_INI_KEY_TREADB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
									/*
									   case T0_NTC_SN_0     :break;
									   case T0_NTC_SN_1 	:break;
									   case T0_NTC_B_0      :break;
									   case T0_NTC_B_1      :break;
									   case T0_NTC_Rc_0     :break;
									   case T0_NTC_Rc_1     :break;
									   case T0_NTC_R0_0     :break;
									   case T0_NTC_R0_1    :break;
									   case T0_TempCalRaw_0	:break;
									   case T0_TempCalRaw_1	:break;
									   case T0_Module_SN_0	:break;
									   case T0_Module_SN_1	:break;
									 */
									//case T1_ConfigFlag           :break; BuffFloat = ((data2<<8) + data1);break;
	case T1_TempXC               :  BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T1,GS_INI_KEY_TEMPXC,BUffInt,GS_INI_CALI_FILE);
									BUffInt = 0;
									break;

	case T1_Temperature_0        :  BuffFloat = ((data2<<8) + data1);break;
	case T1_Temperature_1        :  BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T1,GS_INI_KEY_T,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case T1_Tdelta_0            :   BuffFloat = ((data2<<8) + data1);break;
	case T1_Tdelta_1            :   BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T1,GS_INI_KEY_T_DELTA,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case T1_TempControlEnable	:   BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T1,GS_INI_KEY_TEMPCTRLEN,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T1_EnableKd             :  BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T1,GS_INI_KEY_ENAKD,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T1_TimerInterval       :   BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T1,GS_INI_KEY_INTERVAL,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T1_AdjustPeriod	:       BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T1,GS_INI_KEY_ADJ,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T1_Kp_0         :          BuffFloat = ((data2<<8) + data1);break;
	case T1_Kp_1        :           BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T1,GS_INI_KEY_KP,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case T1_Ki_0         :          BuffFloat = ((data2<<8) + data1);break;
	case T1_Ki_1         :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T1,GS_INI_KEY_KI,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case T1_Kd_0         :          BuffFloat = ((data2<<8) + data1);break;
	case T1_Kd_1         :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T1,GS_INI_KEY_KD,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case T1_RegAdj       :          BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T1,GS_INI_KEY_REGADJ,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T1_TempADC      :          BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T1,GS_INI_KEY_TADC,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T1_TLBit       :           BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T1,GS_INI_KEY_TLBIT,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T1_RthA_0       :          BuffFloat = ((data2<<8) + data1);break;
	case T1_RthA_1       :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T1,GS_INI_KEY_RTHA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case T1_RthB_0       :          BuffFloat = ((data2<<8) + data1);break;
	case T1_RthB_1       :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T1,GS_INI_KEY_RTHB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case T1_VthA_0      :           BuffFloat = ((data2<<8) + data1);break;
	case T1_VthA_1       :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T1,GS_INI_KEY_VTHA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case T1_VthB_0       :          BuffFloat = ((data2<<8) + data1);break;
	case T1_VthB_1       :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T1,GS_INI_KEY_VTHB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case T1_TemReadA_0	:           BuffFloat = ((data2<<8) + data1);break;
	case T1_TemReadA_1	:           BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T1,GS_INI_KEY_TREADA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case T1_TemReadB_0	:           BuffFloat = ((data2<<8) + data1);break;
	case T1_TemReadB_1	:           BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T1,GS_INI_KEY_TREADB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
									/*
									   case T1_NTC_SN_0     :break;
									   case T1_NTC_SN_1 	:break;
									   case T1_NTC_B_0      :break;
									   case T1_NTC_B_1      :break;
									   case T1_NTC_Rc_0     :break;
									   case T1_NTC_Rc_1     :break;
									   case T1_NTC_R0_0     :break;
									   case T1_NTC_R0_1    :break;
									   case T1_TempCalRaw_0	:break;
									   case T1_TempCalRaw_1	:break;
									   case T1_Module_SN_0	:break;
									   case T1_Module_SN_1	:break;
									 */
									//case T2_ConfigFlag           :break; BuffFloat = ((data2<<8) + data1);break;
	case T2_TempXC               :  BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T2,GS_INI_KEY_TEMPXC,BUffInt,GS_INI_CALI_FILE);
									BUffInt = 0;
									break;

	case T2_Temperature_0        :  BuffFloat = ((data2<<8) + data1);break;
	case T2_Temperature_1        :  BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T2,GS_INI_KEY_T,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case T2_Tdelta_0            :   BuffFloat = ((data2<<8) + data1);break;
	case T2_Tdelta_1            :   BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T2,GS_INI_KEY_T_DELTA,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case T2_TempControlEnable	:   BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T2,GS_INI_KEY_TEMPCTRLEN,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T2_EnableKd             :  BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T2,GS_INI_KEY_ENAKD,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T2_TimerInterval       :   BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T2,GS_INI_KEY_INTERVAL,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T2_AdjustPeriod	:       BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T2,GS_INI_KEY_ADJ,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T2_Kp_0         :          BuffFloat = ((data2<<8) + data1);break;
	case T2_Kp_1        :           BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T2,GS_INI_KEY_KP,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case T2_Ki_0         :          BuffFloat = ((data2<<8) + data1);break;
	case T2_Ki_1         :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T2,GS_INI_KEY_KI,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case T2_Kd_0         :          BuffFloat = ((data2<<8) + data1);break;
	case T2_Kd_1         :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T2,GS_INI_KEY_KD,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case T2_RegAdj       :          BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T2,GS_INI_KEY_REGADJ,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T2_TempADC      :          BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T2,GS_INI_KEY_TADC,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T2_TLBit       :           BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T2,GS_INI_KEY_TLBIT,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T2_RthA_0       :          BuffFloat = ((data2<<8) + data1);break;
	case T2_RthA_1       :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T2,GS_INI_KEY_RTHA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case T2_RthB_0       :          BuffFloat = ((data2<<8) + data1);break;
	case T2_RthB_1       :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T2,GS_INI_KEY_RTHB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case T2_VthA_0      :           BuffFloat = ((data2<<8) + data1);break;
	case T2_VthA_1       :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T2,GS_INI_KEY_VTHA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case T2_VthB_0       :          BuffFloat = ((data2<<8) + data1);break;
	case T2_VthB_1       :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T2,GS_INI_KEY_VTHB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case T2_TemReadA_0	:           BuffFloat = ((data2<<8) + data1);break;
	case T2_TemReadA_1	:           BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T2,GS_INI_KEY_TREADA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case T2_TemReadB_0	:           BuffFloat = ((data2<<8) + data1);break;
	case T2_TemReadB_1	:           BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T2,GS_INI_KEY_TREADB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
									/*
									   case T2_NTC_SN_0     :break;
									   case T2_NTC_SN_1 	:break;
									   case T2_NTC_B_0      :break;
									   case T2_NTC_B_1      :break;
									   case T2_NTC_Rc_0     :break;
									   case T2_NTC_Rc_1     :break;
									   case T2_NTC_R0_0     :break;
									   case T2_NTC_R0_1    :break;
									   case T2_TempCalRaw_0	:break;
									   case T2_TempCalRaw_1	:break;
									   case T2_Module_SN_0	:break;
									   case T2_Module_SN_1	:break;
									 */
									//case T3_ConfigFlag           :break; BuffFloat = ((data2<<8) + data1);break;
	case T3_TempXC               :  BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T3,GS_INI_KEY_TEMPXC,BUffInt,GS_INI_CALI_FILE);
									BUffInt = 0;
									break;

	case T3_Temperature_0        :  BuffFloat = ((data2<<8) + data1);break;
	case T3_Temperature_1        :  BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T3,GS_INI_KEY_T,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case T3_Tdelta_0            :   BuffFloat = ((data2<<8) + data1);break;
	case T3_Tdelta_1            :   BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T3,GS_INI_KEY_T_DELTA,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case T3_TempControlEnable	:   BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T3,GS_INI_KEY_TEMPCTRLEN,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T3_EnableKd             :  BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T3,GS_INI_KEY_ENAKD,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T3_TimerInterval       :   BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T3,GS_INI_KEY_INTERVAL,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T3_AdjustPeriod	:       BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T3,GS_INI_KEY_ADJ,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T3_Kp_0         :          BuffFloat = ((data2<<8) + data1);break;
	case T3_Kp_1        :           BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T3,GS_INI_KEY_KP,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case T3_Ki_0         :          BuffFloat = ((data2<<8) + data1);break;
	case T3_Ki_1         :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T3,GS_INI_KEY_KI,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case T3_Kd_0         :          BuffFloat = ((data2<<8) + data1);break;
	case T3_Kd_1         :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T3,GS_INI_KEY_KD,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case T3_RegAdj       :          BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T3,GS_INI_KEY_REGADJ,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T3_TempADC      :          BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T3,GS_INI_KEY_TADC,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T3_TLBit       :           BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T3,GS_INI_KEY_TLBIT,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T3_RthA_0       :          BuffFloat = ((data2<<8) + data1);break;
	case T3_RthA_1       :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T3,GS_INI_KEY_RTHA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case T3_RthB_0       :          BuffFloat = ((data2<<8) + data1);break;
	case T3_RthB_1       :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T3,GS_INI_KEY_RTHB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case T3_VthA_0      :           BuffFloat = ((data2<<8) + data1);break;
	case T3_VthA_1       :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T3,GS_INI_KEY_VTHA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case T3_VthB_0       :          BuffFloat = ((data2<<8) + data1);break;
	case T3_VthB_1       :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T3,GS_INI_KEY_VTHB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case T3_TemReadA_0	:           BuffFloat = ((data2<<8) + data1);break;
	case T3_TemReadA_1	:           BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T3,GS_INI_KEY_TREADA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case T3_TemReadB_0	:           BuffFloat = ((data2<<8) + data1);break;
	case T3_TemReadB_1	:           BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T3,GS_INI_KEY_TREADB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
									/*
									   case T3_NTC_SN_0     :break;
									   case T3_NTC_SN_1 	:break;
									   case T3_NTC_B_0      :break;
									   case T3_NTC_B_1      :break;
									   case T3_NTC_Rc_0     :break;
									   case T3_NTC_Rc_1     :break;
									   case T3_NTC_R0_0     :break;
									   case T3_NTC_R0_1    :break;
									   case T3_TempCalRaw_0	:break;
									   case T3_TempCalRaw_1	:break;
									   case T3_Module_SN_0	:break;
									   case T3_Module_SN_1	:break;
									 */
									//case T4_ConfigFlag           :break; BuffFloat = ((data2<<8) + data1);break;
	case T4_TempXC               :  BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T4,GS_INI_KEY_TEMPXC,BUffInt,GS_INI_CALI_FILE);
									BUffInt = 0;
									break;

	case T4_Temperature_0        :  BuffFloat = ((data2<<8) + data1);break;
	case T4_Temperature_1        :  BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T4,GS_INI_KEY_T,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case T4_Tdelta_0            :   BuffFloat = ((data2<<8) + data1);break;
	case T4_Tdelta_1            :   BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T4,GS_INI_KEY_T_DELTA,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case T4_TempControlEnable	:   BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T4,GS_INI_KEY_TEMPCTRLEN,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T4_EnableKd             :  BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T4,GS_INI_KEY_ENAKD,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T4_TimerInterval       :   BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T4,GS_INI_KEY_INTERVAL,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T4_AdjustPeriod	:       BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T4,GS_INI_KEY_ADJ,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T4_Kp_0         :          BuffFloat = ((data2<<8) + data1);break;
	case T4_Kp_1        :           BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T4,GS_INI_KEY_KP,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case T4_Ki_0         :          BuffFloat = ((data2<<8) + data1);break;
	case T4_Ki_1         :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T4,GS_INI_KEY_KI,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case T4_Kd_0         :          BuffFloat = ((data2<<8) + data1);break;
	case T4_Kd_1         :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T4,GS_INI_KEY_KD,BuffFloat,GS_INI_HARD_FILE);
									BuffFloat = 0;
									break;
	case T4_RegAdj       :          BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T4,GS_INI_KEY_REGADJ,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T4_TempADC      :          BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T4,GS_INI_KEY_TADC,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T4_TLBit       :           BUffInt = ((data2<<8) + data1);
									WritePrivateProfileInt(GS_INI_SECTION_T4,GS_INI_KEY_TLBIT,BUffInt,GS_INI_HARD_FILE);
									BUffInt = 0;
									break;
	case T4_RthA_0       :          BuffFloat = ((data2<<8) + data1);break;
	case T4_RthA_1       :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T4,GS_INI_KEY_RTHA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case T4_RthB_0       :          BuffFloat = ((data2<<8) + data1);break;
	case T4_RthB_1       :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T4,GS_INI_KEY_RTHB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case T4_VthA_0      :           BuffFloat = ((data2<<8) + data1);break;
	case T4_VthA_1       :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T4,GS_INI_KEY_VTHA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case T4_VthB_0       :          BuffFloat = ((data2<<8) + data1);break;
	case T4_VthB_1       :          BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T4,GS_INI_KEY_VTHB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case T4_TemReadA_0	:           BuffFloat = ((data2<<8) + data1);break;
	case T4_TemReadA_1	:           BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T4,GS_INI_KEY_TREADA,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
	case T4_TemReadB_0	:           BuffFloat = ((data2<<8) + data1);break;
	case T4_TemReadB_1	:           BuffFloat += ((data2<<24) + (data1<<16));
									WritePrivateProfileDouble(GS_INI_SECTION_T4,GS_INI_KEY_TREADB,BuffFloat,GS_INI_CALI_FILE);
									BuffFloat = 0;
									break;
									/*
									   case T4_NTC_SN_0     :break;
									   case T4_NTC_SN_1 	:break;
									   case T4_NTC_B_0      :break;
									   case T4_NTC_B_1      :break;
									   case T4_NTC_Rc_0     :break;
									   case T4_NTC_Rc_1     :break;
									   case T4_NTC_R0_0     :break;
									   case T4_NTC_R0_1    :break;
									   case T4_TempCalRaw_0	:break;
									   case T4_TempCalRaw_1	:break;
									   case T4_Module_SN_0	:break;
									   case T4_Module_SN_1	:break;
									 */



	}


}


